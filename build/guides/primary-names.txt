2:"$Sreact.fragment"
4:I[15244,[],""]
5:I[43866,[],""]
6:I[92179,["7866","static/chunks/2a351a00-0c6ce40bfa6ca10a.js","9268","static/chunks/aaea2bcf-5ed8e0add326de85.js","2178","static/chunks/2178-de59cf2b1efc07cd.js","3140","static/chunks/3140-08f9823aa16c628b.js","1753","static/chunks/1753-352fbbc493e3cee0.js","7611","static/chunks/app/build/guides/primary-names/page-a740e3cc594540a8.js"],"Heading"]
7:I[44839,["7866","static/chunks/2a351a00-0c6ce40bfa6ca10a.js","9268","static/chunks/aaea2bcf-5ed8e0add326de85.js","2178","static/chunks/2178-de59cf2b1efc07cd.js","3140","static/chunks/3140-08f9823aa16c628b.js","1753","static/chunks/1753-352fbbc493e3cee0.js","7611","static/chunks/app/build/guides/primary-names/page-a740e3cc594540a8.js"],""]
8:I[71713,["7866","static/chunks/2a351a00-0c6ce40bfa6ca10a.js","9268","static/chunks/aaea2bcf-5ed8e0add326de85.js","2178","static/chunks/2178-de59cf2b1efc07cd.js","3140","static/chunks/3140-08f9823aa16c628b.js","1753","static/chunks/1753-352fbbc493e3cee0.js","7611","static/chunks/app/build/guides/primary-names/page-a740e3cc594540a8.js"],"default"]
9:I[25856,["7866","static/chunks/2a351a00-0c6ce40bfa6ca10a.js","9268","static/chunks/aaea2bcf-5ed8e0add326de85.js","2178","static/chunks/2178-de59cf2b1efc07cd.js","3140","static/chunks/3140-08f9823aa16c628b.js","1753","static/chunks/1753-352fbbc493e3cee0.js","7611","static/chunks/app/build/guides/primary-names/page-a740e3cc594540a8.js"],"Code"]
a:I[25856,["7866","static/chunks/2a351a00-0c6ce40bfa6ca10a.js","9268","static/chunks/aaea2bcf-5ed8e0add326de85.js","2178","static/chunks/2178-de59cf2b1efc07cd.js","3140","static/chunks/3140-08f9823aa16c628b.js","1753","static/chunks/1753-352fbbc493e3cee0.js","7611","static/chunks/app/build/guides/primary-names/page-a740e3cc594540a8.js"],"CodeGroup"]
b:I[25856,["7866","static/chunks/2a351a00-0c6ce40bfa6ca10a.js","9268","static/chunks/aaea2bcf-5ed8e0add326de85.js","2178","static/chunks/2178-de59cf2b1efc07cd.js","3140","static/chunks/3140-08f9823aa16c628b.js","1753","static/chunks/1753-352fbbc493e3cee0.js","7611","static/chunks/app/build/guides/primary-names/page-a740e3cc594540a8.js"],"Pre"]
16:I[86213,[],"OutletBoundary"]
18:I[86213,[],"MetadataBoundary"]
1a:I[86213,[],"ViewportBoundary"]
1c:I[34835,[],""]
1:HL["/docs-v2/_next/static/css/2788389254263cb4.css","style"]
c:T178e,<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;fs&quot;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> { </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ArweaveSigner</span><span style="color: var(--shiki-color-text)"> } </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;@ar.io/sdk&quot;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">() {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">jwk</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">JSON</span><span style="color: var(--shiki-token-function)">.parse</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.readFileSync</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;KeyFile.json&quot;</span><span style="color: var(--shiki-color-text)">));</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">        signer</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ArweaveSigner</span><span style="color: var(--shiki-color-text)">(jwk)</span></span>
<span><span style="color: var(--shiki-color-text)">    });</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> { id: </span><span style="color: var(--shiki-token-constant)">txId</span><span style="color: var(--shiki-color-text)"> } </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-token-function)">.requestPrimaryName</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">        name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;my-arns-name&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        processId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;ANT-PROCESS-ID&#39;</span></span>
<span><span style="color: var(--shiki-color-text)">    });</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">`Primary name request submitted: </span><span style="color: var(--shiki-token-keyword)">${</span><span style="color: var(--shiki-color-text)">txId</span><span style="color: var(--shiki-token-keyword)">}</span><span style="color: var(--shiki-token-string-expression)">`</span><span style="color: var(--shiki-color-text)">);</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">();</span></span>
<span></span>d:T1121,<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { ARIO</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> ArConnectSigner } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;@ar.io/sdk/web&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">() {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">        signer</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ArConnectSigner</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">window</span><span style="color: var(--shiki-color-text)">.arweaveWallet)</span></span>
<span><span style="color: var(--shiki-color-text)">    });</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> { id: </span><span style="color: var(--shiki-token-constant)">txId</span><span style="color: var(--shiki-color-text)"> } </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-token-function)">.requestPrimaryName</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">        name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;my-arns-name&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        processId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;ANT-PROCESS-ID&#39;</span></span>
<span><span style="color: var(--shiki-color-text)">    });</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">`Primary name request submitted: </span><span style="color: var(--shiki-token-keyword)">${</span><span style="color: var(--shiki-color-text)">txId</span><span style="color: var(--shiki-token-keyword)">}</span><span style="color: var(--shiki-token-string-expression)">`</span><span style="color: var(--shiki-color-text)">);</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">();</span></span>
<span></span>e:T1151,<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> { </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-color-text)"> } </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;@ar.io/sdk&quot;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">() {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">();</span></span>
<span><span style="color: var(--shiki-color-text)">    </span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">request</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-token-function)">.getPrimaryNameRequest</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">        initiator</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;WALLET-ADDRESS&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// The wallet address that made the request</span></span>
<span><span style="color: var(--shiki-color-text)">    });</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(request);</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Example response:</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">//   &quot;initiator&quot;: &quot;WALLET-ADDRESS&quot;,</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">//   &quot;name&quot;: &quot;arns&quot;,</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">//   &quot;startTimestamp&quot;: 1728067635857,</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">//   &quot;endTimestamp&quot;: 1735843635857</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// }</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">();</span></span>
<span></span>f:Tc35,<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { ARIO } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;@ar.io/sdk/web&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">() {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">();</span></span>
<span><span style="color: var(--shiki-color-text)">    </span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">request</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-token-function)">.getPrimaryNameRequest</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">        initiator</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;WALLET-ADDRESS&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// The wallet address that made the request</span></span>
<span><span style="color: var(--shiki-color-text)">    });</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(request);</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">();</span></span>
<span></span>10:T1a3d,<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;fs&quot;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> { </span><span style="color: var(--shiki-token-constant)">ANT</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ArweaveSigner</span><span style="color: var(--shiki-color-text)"> } </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;@ar.io/sdk&quot;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">() {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">jwk</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">JSON</span><span style="color: var(--shiki-token-function)">.parse</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.readFileSync</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;KeyFile.json&quot;</span><span style="color: var(--shiki-color-text)">));</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ant</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ANT</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">        signer</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ArweaveSigner</span><span style="color: var(--shiki-color-text)">(jwk)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        processId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;ANT-PROCESS-ID&quot;</span></span>
<span><span style="color: var(--shiki-color-text)">    });</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> { id: </span><span style="color: var(--shiki-token-constant)">txId</span><span style="color: var(--shiki-color-text)"> } </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ant</span><span style="color: var(--shiki-token-function)">.approvePrimaryNameRequest</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">        name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;my-arns-name&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        address</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;WALLET-ADDRESS&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        ioProcessId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;ARIO-PROCESS-ID&#39;</span></span>
<span><span style="color: var(--shiki-color-text)">    });</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">`Primary name request approved: </span><span style="color: var(--shiki-token-keyword)">${</span><span style="color: var(--shiki-color-text)">txId</span><span style="color: var(--shiki-token-keyword)">}</span><span style="color: var(--shiki-token-string-expression)">`</span><span style="color: var(--shiki-color-text)">);</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">();</span></span>
<span></span>11:T13d0,<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { ANT</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> ArConnectSigner } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;@ar.io/sdk/web&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">() {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ant</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ANT</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">        signer</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ArConnectSigner</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">window</span><span style="color: var(--shiki-color-text)">.arweaveWallet)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        processId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;ANT-PROCESS-ID&quot;</span></span>
<span><span style="color: var(--shiki-color-text)">    });</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> { id: </span><span style="color: var(--shiki-token-constant)">txId</span><span style="color: var(--shiki-color-text)"> } </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ant</span><span style="color: var(--shiki-token-function)">.approvePrimaryNameRequest</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">        name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;my-arns-name&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        address</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;WALLET-ADDRESS&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        ioProcessId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;ARIO-PROCESS-ID&#39;</span></span>
<span><span style="color: var(--shiki-color-text)">    });</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">`Primary name request approved: </span><span style="color: var(--shiki-token-keyword)">${</span><span style="color: var(--shiki-color-text)">txId</span><span style="color: var(--shiki-token-keyword)">}</span><span style="color: var(--shiki-token-string-expression)">`</span><span style="color: var(--shiki-color-text)">);</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">();</span></span>
<span></span>12:Tc73,<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> { </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-color-text)"> } </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;@ar.io/sdk&quot;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">() {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">();</span></span>
<span><span style="color: var(--shiki-color-text)">    </span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">primaryName</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-token-function)">.getPrimaryName</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">        name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;my-arns-name&#39;</span></span>
<span><span style="color: var(--shiki-color-text)">    });</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(primaryName);</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">();</span></span>
<span></span>13:Tb98,<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { ARIO } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;@ar.io/sdk/web&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">() {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">();</span></span>
<span><span style="color: var(--shiki-color-text)">    </span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">primaryName</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-token-function)">.getPrimaryName</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">        name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;my-arns-name&#39;</span></span>
<span><span style="color: var(--shiki-color-text)">    });</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(primaryName);</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">();</span></span>
<span></span>14:T1eb3,<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> { </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-color-text)"> } </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;@ar.io/sdk&quot;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">() {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">();</span></span>
<span><span style="color: var(--shiki-color-text)">    </span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// First page of results</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">firstPage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-token-function)">.getPrimaryNames</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">        limit</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">10</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        sortBy</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;startTimestamp&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        sortOrder</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;desc&#39;</span></span>
<span><span style="color: var(--shiki-color-text)">    });</span></span>
<span><span style="color: var(--shiki-color-text)">    </span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;First page:&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">firstPage</span><span style="color: var(--shiki-color-text)">.items);</span></span>
<span><span style="color: var(--shiki-color-text)">    </span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">firstPage</span><span style="color: var(--shiki-color-text)">.hasMore) {</span></span>
<span><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// Get next page using the cursor from previous response</span></span>
<span><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">nextPage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-token-function)">.getPrimaryNames</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">            cursor</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">firstPage</span><span style="color: var(--shiki-color-text)">.cursor</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// Last name from previous request</span></span>
<span><span style="color: var(--shiki-color-text)">            limit</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">10</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">            sortBy</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;startTimestamp&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">            sortOrder</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;desc&#39;</span></span>
<span><span style="color: var(--shiki-color-text)">        });</span></span>
<span><span style="color: var(--shiki-color-text)">        </span></span>
<span><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Next page:&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">nextPage</span><span style="color: var(--shiki-color-text)">.items);</span></span>
<span><span style="color: var(--shiki-color-text)">    }</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">();</span></span>
<span></span>15:T1dd8,<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { ARIO } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;@ar.io/sdk/web&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">() {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">();</span></span>
<span><span style="color: var(--shiki-color-text)">    </span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// First page of results</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">firstPage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-token-function)">.getPrimaryNames</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">        limit</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">10</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        sortBy</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;startTimestamp&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        sortOrder</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;desc&#39;</span></span>
<span><span style="color: var(--shiki-color-text)">    });</span></span>
<span><span style="color: var(--shiki-color-text)">    </span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;First page:&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">firstPage</span><span style="color: var(--shiki-color-text)">.items);</span></span>
<span><span style="color: var(--shiki-color-text)">    </span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">firstPage</span><span style="color: var(--shiki-color-text)">.hasMore) {</span></span>
<span><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// Get next page using the cursor from previous response</span></span>
<span><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">nextPage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-token-function)">.getPrimaryNames</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">            cursor</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">firstPage</span><span style="color: var(--shiki-color-text)">.cursor</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// Last name from previous request</span></span>
<span><span style="color: var(--shiki-color-text)">            limit</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">10</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">            sortBy</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;startTimestamp&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">            sortOrder</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;desc&#39;</span></span>
<span><span style="color: var(--shiki-color-text)">        });</span></span>
<span><span style="color: var(--shiki-color-text)">        </span></span>
<span><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Next page:&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">nextPage</span><span style="color: var(--shiki-color-text)">.items);</span></span>
<span><span style="color: var(--shiki-color-text)">    }</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">();</span></span>
<span></span>0:{"P":null,"b":"btsqpiJpM4GFFqfofgfND","p":"/docs-v2","c":["","build","guides","primary-names"],"i":false,"f":[[["",{"children":["build",{"children":["guides",{"children":["primary-names",{"children":["__PAGE__",{}]}]}]}]},"$undefined","$undefined",true],["",["$","$2","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/docs-v2/_next/static/css/2788389254263cb4.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],"$L3"]}],{"children":["build",["$","$2","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","build","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}],{"children":["guides",["$","$2","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","build","children","guides","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}],{"children":["primary-names",["$","$2","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","build","children","guides","children","primary-names","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}],{"children":["__PAGE__",["$","$2","c",{"children":[["$","article",null,{"className":"flex h-full flex-col pb-10 pt-16","children":[["$","div",null,{"className":"flex-auto prose dark:prose-invert [html_:where(&>*)]:mx-auto [html_:where(&>*)]:max-w-2xl [html_:where(&>*)]:lg:mx-[calc(50%-min(50%,theme(maxWidth.lg)))] [html_:where(&>*)]:lg:max-w-3xl","children":[["$","div",null,{"className":"absolute inset-0 -z-10 mx-0 max-w-none overflow-hidden","children":["$","div",null,{"className":"absolute left-1/2 top-0 ml-[-38rem] h-[25rem] w-[81.25rem] dark:[mask-image:linear-gradient(white,transparent)]","children":[["$","div",null,{"className":"absolute inset-0 bg-gradient-to-r from-[#36b49f] to-[#DF9BE8] opacity-40 [mask-image:radial-gradient(farthest-side_at_top,white,transparent)] dark:from-[#DF9BE8]/30 dark:to-[#DF9BE8]/30 dark:opacity-100","children":["$","svg",null,{"aria-hidden":"true","className":"absolute inset-x-0 inset-y-[-50%] h-[200%] w-full skew-y-[-18deg] fill-black/40 stroke-black/50 mix-blend-overlay dark:fill-white/2.5 dark:stroke-white/5","children":[["$","defs",null,{"children":["$","pattern",null,{"id":":S1:","width":72,"height":56,"patternUnits":"userSpaceOnUse","x":-12,"y":4,"children":["$","path",null,{"d":"M.5 56V.5H72","fill":"none"}]}]}],["$","rect",null,{"width":"100%","height":"100%","strokeWidth":0,"fill":"url(#:S1:)"}],["$","svg",null,{"x":-12,"y":4,"className":"overflow-visible","children":[["$","rect","4-3",{"strokeWidth":"0","width":73,"height":57,"x":288,"y":168}],["$","rect","2-1",{"strokeWidth":"0","width":73,"height":57,"x":144,"y":56}],["$","rect","7-3",{"strokeWidth":"0","width":73,"height":57,"x":504,"y":168}],["$","rect","10-6",{"strokeWidth":"0","width":73,"height":57,"x":720,"y":336}]]}]]}]}],["$","svg",null,{"viewBox":"0 0 1113 440","aria-hidden":"true","className":"absolute left-1/2 top-0 ml-[-19rem] w-[69.5625rem] fill-white blur-[26px] dark:hidden","children":["$","path",null,{"d":"M.016 439.5s-9.5-300 434-300S882.516 20 882.516 20V0h230.004v439.5H.016Z"}]}]]}]}],"\n",["$","h1",null,{"children":"Managing Primary Names"}],"\n",["$","$L6",null,{"level":2,"id":"overview","children":"Overview"}],"\n",["$","p",null,{"children":"Primary names allow users to set a user-friendly alias for their Arweave wallet address, simplifying how addresses are displayed across applications. This process involves interaction between two separate smart contracts:"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["The ",["$","$L7",null,{"href":"/learn/ario-contract","children":"AR.IO Contract"}]," - which manages the primary name registry and requests"]}],"\n",["$","li",null,{"children":["The ",["$","$L7",null,{"href":"/learn/arns#arweave-name-token-ant","children":"ANT"}]," Contract - which controls the specific ArNS name and must approve any primary name requests"]}],"\n"]}],"\n",["$","p",null,{"children":"The process requires two steps because these are separate contracts:"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"First, a request must be submitted to the AR.IO contract to set a specific ArNS name as the primary name for a wallet"}],"\n",["$","li",null,{"children":"Then, the ANT owner must approve this request, confirming that this wallet can use the name as its primary identifier"}],"\n"]}],"\n",["$","p",null,{"children":"This two-step verification ensures that both the wallet owner and the ANT owner have authorized the connection."}],"\n",["$","div",null,{"className":"my-6 flex gap-2.5 rounded-2xl border border-emerald-500/20 bg-emerald-50/50 p-4 leading-6 text-emerald-900 dark:border-emerald-500/30 dark:bg-emerald-500/5 dark:text-emerald-200 dark:[--tw-prose-links-hover:theme(colors.emerald.300)] dark:[--tw-prose-links:theme(colors.white)]","children":[["$","svg",null,{"viewBox":"0 0 16 16","aria-hidden":"true","className":"mt-1 h-4 w-4 flex-none fill-emerald-500 stroke-white dark:fill-emerald-200/20 dark:stroke-emerald-200","children":[["$","circle",null,{"cx":"8","cy":"8","r":"8","strokeWidth":"0"}],["$","path",null,{"fill":"none","strokeLinecap":"round","strokeLinejoin":"round","strokeWidth":"1.5","d":"M6.75 7.75h1.5v3.5"}],["$","circle",null,{"cx":"8","cy":"4","r":".5","fill":"none"}]]}],["$","div",null,{"className":"[&>:first-child]:mt-0 [&>:last-child]:mb-0","children":["$","p",null,{"children":"Think of this like setting a username on a social platform - where the platform (AR.IO contract) maintains the registry of usernames, and the name owner (ANT) must approve who can claim their name as an identifier."}]}]]}],"\n",["$","$L6",null,{"level":2,"id":"setting-a-primary-name-with-arns-app","children":"Setting a Primary Name with arns.app"}],"\n",["$","p",null,{"children":[["$","$L7",null,{"href":"https://arns.arweave.net","rel":"noopener noreferrer","target":"_blank","children":["arns.app",["$","span",null,{"children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":"12","height":"12","viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":"2","strokeLinecap":"round","strokeLinejoin":"round","className":"ml-1 inline-block","children":[["$","path",null,{"d":"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"}],["$","polyline",null,{"points":"15 3 21 3 21 9"}],["$","line",null,{"x1":"10","y1":"14","x2":"21","y2":"3"}]]}]}]]}]," is the official ArNS portal from AR.IO. It allows you to manage your ArNS names and set primary names for your wallet addresses."]}],"\n",["$","p",null,{"children":["To set a primary name using arns.app, connect your wallet and navigate to the ",["$","$L7",null,{"href":"https://arns.arweave.net/#/manage/names","rel":"noopener noreferrer","target":"_blank","children":["ArNS name management page",["$","span",null,{"children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":"12","height":"12","viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":"2","strokeLinecap":"round","strokeLinejoin":"round","className":"ml-1 inline-block","children":[["$","path",null,{"d":"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"}],["$","polyline",null,{"points":"15 3 21 3 21 9"}],["$","line",null,{"x1":"10","y1":"14","x2":"21","y2":"3"}]]}]}]]}],"."]}],"\n",["$","$L8",null,{"src":"https://arweave.net/O7YJl7pkEC90tz_TrC3PwIkGEqIC4nDq5cq6ojYO3UM"}],"\n",["$","p",null,{"children":"Simply locate the ArNS name you want to set as primary and click the star icon at the right of the entry. You will then be prompted to accept the cost of setting the name, and the location of the funds to pay for the transaction."}],"\n",["$","$L8",null,{"src":"https://arweave.net/NC4DZJbmIn9RCzsTHmM_VEeYwS7RD_nBCDi0lWU-LM8"}],"\n",["$","p",null,{"children":"Once the transaction is confirmed, you will be prompted to sign the transaction with your connected wallet. When this is completed, the name will be set as primary for your wallet address, and apps that support primary names will display the name instead of the wallet address."}],"\n",["$","$L8",null,{"src":"https://arweave.net/Bobu8x6zTIiVhOHDdiXaN_XXUcIBJlQSJq6Hg5vFQSg"}],"\n",["$","$L6",null,{"level":2,"id":"setting-a-primary-name-with-the-ar-io-sdk","children":"Setting a Primary Name With the AR.IO SDK"}],"\n",["$","p",null,{"children":"The process of setting a primary name using the AR.IO SDK involves two steps: requesting and approval. This two-step process ensures proper authorization from both the wallet owner and the ANT owner."}],"\n",["$","h3",null,{"children":"Requesting a Primary Name"}],"\n",["$","p",null,{"children":"When requesting a primary name, you're asking to use an ArNS name as the identifier for your wallet address. This requires:"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"The ArNS name to exist"}],"\n",["$","li",null,{"children":["Your wallet to submit the request using the ",["$","$L7",null,{"href":"/build/ar-io-sdk/primary-names/request-primary-name","language":"txt","children":["$","$L9",null,{"children":"requestPrimaryName"}]}]," method"]}],"\n",["$","li",null,{"children":"The ANT owner's approval"}],"\n"]}],"\n",["$","$La",null,{"title":"Request Primary Name","children":[["$","$Lb",null,{"language":"typescript","code":"const fs = require(\"fs\");\nconst { ARIO, ArweaveSigner } = require(\"@ar.io/sdk\");\n\nasync function main() {\n    const jwk = JSON.parse(fs.readFileSync(\"KeyFile.json\"));\n    const ario = ARIO.init({\n        signer: new ArweaveSigner(jwk)\n    });\n\n    const { id: txId } = await ario.requestPrimaryName({\n        name: 'my-arns-name',\n        processId: 'ANT-PROCESS-ID'\n    });\n\n    console.log(`Primary name request submitted: ${txId}`);\n}\n\nmain();\n","children":["$","$L9",null,{"className":"language-typescript","children":"$c"}],"title":"NodeJS"}],["$","$Lb",null,{"language":"typescript","code":"import { ARIO, ArConnectSigner } from '@ar.io/sdk/web';\n\nasync function main() {\n    const ario = ARIO.init({\n        signer: new ArConnectSigner(window.arweaveWallet)\n    });\n\n    const { id: txId } = await ario.requestPrimaryName({\n        name: 'my-arns-name',\n        processId: 'ANT-PROCESS-ID'\n    });\n\n    console.log(`Primary name request submitted: ${txId}`);\n}\n\nmain();\n","children":["$","$L9",null,{"className":"language-typescript","children":"$d"}],"title":"Web"}]]}],"\n",["$","h3",null,{"children":"Check Primary Name Requests"}],"\n",["$","p",null,{"children":["The ",["$","$L7",null,{"href":"/build/ar-io-sdk/primary-names/get-primary-name-request","language":"txt","children":["$","$L9",null,{"children":"getPrimaryNameRequest"}]}]," method allows you to verify if a primary name request exists and its status. Use this to:"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Verify if your request is pending"}],"\n",["$","li",null,{"children":"Check if someone has requested to use your ANT's name"}],"\n",["$","li",null,{"children":"Build UI flows around the request/approval process"}],"\n"]}],"\n",["$","$La",null,{"title":"Get Primary Name Request","children":[["$","$Lb",null,{"language":"typescript","code":"const { ARIO } = require(\"@ar.io/sdk\");\n\nasync function main() {\n    const ario = ARIO.init();\n    \n    const request = await ario.getPrimaryNameRequest({\n        initiator: 'WALLET-ADDRESS' // The wallet address that made the request\n    });\n\n    console.log(request);\n    // Example response:\n    // {\n    //   \"initiator\": \"WALLET-ADDRESS\",\n    //   \"name\": \"arns\",\n    //   \"startTimestamp\": 1728067635857,\n    //   \"endTimestamp\": 1735843635857\n    // }\n}\n\nmain();\n","children":["$","$L9",null,{"className":"language-typescript","children":"$e"}],"title":"NodeJS"}],["$","$Lb",null,{"language":"typescript","code":"import { ARIO } from '@ar.io/sdk/web';\n\nasync function main() {\n    const ario = ARIO.init();\n    \n    const request = await ario.getPrimaryNameRequest({\n        initiator: 'WALLET-ADDRESS' // The wallet address that made the request\n    });\n\n    console.log(request);\n}\n\nmain();\n","children":["$","$L9",null,{"className":"language-typescript","children":"$f"}],"title":"Web"}]]}],"\n",["$","h3",null,{"children":"Approving a Primary Name Request"}],"\n",["$","p",null,{"children":["The ANT owner must approve any requests to use their name as a primary name using the ",["$","$L7",null,{"href":"/build/ar-io-sdk/ants/approve-primary-name-request","language":"txt","children":["$","$L9",null,{"children":"approvePrimaryNameRequest"}]}]," method. This gives ANT owners control over how their names are used as identifiers."]}],"\n",["$","$La",null,{"title":"Approve Primary Name","children":[["$","$Lb",null,{"language":"typescript","code":"const fs = require(\"fs\");\nconst { ANT, ArweaveSigner } = require(\"@ar.io/sdk\");\n\nasync function main() {\n    const jwk = JSON.parse(fs.readFileSync(\"KeyFile.json\"));\n    const ant = ANT.init({\n        signer: new ArweaveSigner(jwk),\n        processId: \"ANT-PROCESS-ID\"\n    });\n\n    const { id: txId } = await ant.approvePrimaryNameRequest({\n        name: 'my-arns-name',\n        address: 'WALLET-ADDRESS',\n        ioProcessId: 'ARIO-PROCESS-ID'\n    });\n\n    console.log(`Primary name request approved: ${txId}`);\n}\n\nmain();\n","children":["$","$L9",null,{"className":"language-typescript","children":"$10"}],"title":"NodeJS"}],["$","$Lb",null,{"language":"typescript","code":"import { ANT, ArConnectSigner } from '@ar.io/sdk/web';\n\nasync function main() {\n    const ant = ANT.init({\n        signer: new ArConnectSigner(window.arweaveWallet),\n        processId: \"ANT-PROCESS-ID\"\n    });\n\n    const { id: txId } = await ant.approvePrimaryNameRequest({\n        name: 'my-arns-name',\n        address: 'WALLET-ADDRESS',\n        ioProcessId: 'ARIO-PROCESS-ID'\n    });\n\n    console.log(`Primary name request approved: ${txId}`);\n}\n\nmain();\n","children":["$","$L9",null,{"className":"language-typescript","children":"$11"}],"title":"Web"}]]}],"\n",["$","$L6",null,{"level":2,"id":"querying-primary-names","children":"Querying Primary Names"}],"\n",["$","p",null,{"children":"The AR.IO SDK provides several methods to query primary names, each serving different use cases:"}],"\n",["$","h3",null,{"children":"Get a Single Primary Name"}],"\n",["$","p",null,{"children":["Use ",["$","$L7",null,{"href":"/build/ar-io-sdk/primary-names/get-primary-name","language":"txt","children":["$","$L9",null,{"children":"getPrimaryName"}]}]," when you need to find the primary name for a specific wallet address. This is particularly useful in applications where you want to display a user-friendly identifier instead of their wallet address."]}],"\n",["$","p",null,{"children":"Common use cases:"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Displaying a user's primary name in a profile or dashboard"}],"\n",["$","li",null,{"children":"Showing who authored a piece of content"}],"\n",["$","li",null,{"children":"Making transaction histories more readable"}],"\n"]}],"\n",["$","$La",null,{"title":"Get Primary Name","children":[["$","$Lb",null,{"language":"typescript","code":"const { ARIO } = require(\"@ar.io/sdk\");\n\nasync function main() {\n    const ario = ARIO.init();\n    \n    const primaryName = await ario.getPrimaryName({\n        name: 'my-arns-name'\n    });\n\n    console.log(primaryName);\n}\n\nmain();\n","children":["$","$L9",null,{"className":"language-typescript","children":"$12"}],"title":"NodeJS"}],["$","$Lb",null,{"language":"typescript","code":"import { ARIO } from '@ar.io/sdk/web';\n\nasync function main() {\n    const ario = ARIO.init();\n    \n    const primaryName = await ario.getPrimaryName({\n        name: 'my-arns-name'\n    });\n\n    console.log(primaryName);\n}\n\nmain();\n","children":["$","$L9",null,{"className":"language-typescript","children":"$13"}],"title":"Web"}]]}],"\n",["$","h3",null,{"children":"List All Primary Names"}],"\n",["$","p",null,{"children":["Use ",["$","$L7",null,{"href":"/build/ar-io-sdk/primary-names/get-primary-names","language":"txt","children":["$","$L9",null,{"children":"getPrimaryNames"}]}]," when fetching all primary names. This is useful when you need to:"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Build a directory of users"}],"\n",["$","li",null,{"children":"Create search functionality"}],"\n",["$","li",null,{"children":"Display multiple users in a more readable format"}],"\n",["$","li",null,{"children":"Map multiple wallet addresses to their friendly names at once"}],"\n"]}],"\n",["$","p",null,{"children":"The method supports pagination through a cursor-based system, where the cursor is the last name from your previous request."}],"\n",["$","$La",null,{"title":"Get Primary Names","children":[["$","$Lb",null,{"language":"typescript","code":"const { ARIO } = require(\"@ar.io/sdk\");\n\nasync function main() {\n    const ario = ARIO.init();\n    \n    // First page of results\n    const firstPage = await ario.getPrimaryNames({\n        limit: 10,\n        sortBy: 'startTimestamp',\n        sortOrder: 'desc'\n    });\n    \n    console.log('First page:', firstPage.items);\n    \n    if (firstPage.hasMore) {\n        // Get next page using the cursor from previous response\n        const nextPage = await ario.getPrimaryNames({\n            cursor: firstPage.cursor, // Last name from previous request\n            limit: 10,\n            sortBy: 'startTimestamp',\n            sortOrder: 'desc'\n        });\n        \n        console.log('Next page:', nextPage.items);\n    }\n}\n\nmain();\n","children":["$","$L9",null,{"className":"language-typescript","children":"$14"}],"title":"NodeJS"}],["$","$Lb",null,{"language":"typescript","code":"import { ARIO } from '@ar.io/sdk/web';\n\nasync function main() {\n    const ario = ARIO.init();\n    \n    // First page of results\n    const firstPage = await ario.getPrimaryNames({\n        limit: 10,\n        sortBy: 'startTimestamp',\n        sortOrder: 'desc'\n    });\n    \n    console.log('First page:', firstPage.items);\n    \n    if (firstPage.hasMore) {\n        // Get next page using the cursor from previous response\n        const nextPage = await ario.getPrimaryNames({\n            cursor: firstPage.cursor, // Last name from previous request\n            limit: 10,\n            sortBy: 'startTimestamp',\n            sortOrder: 'desc'\n        });\n        \n        console.log('Next page:', nextPage.items);\n    }\n}\n\nmain();\n","children":["$","$L9",null,{"className":"language-typescript","children":"$15"}],"title":"Web"}]]}],"\n",["$","p",null,{"children":"The response includes:"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"language":"txt","children":[["$","$L9",null,{"children":"items"}],": Array of primary names for the current page"]}],"\n",["$","li",null,{"language":"txt","children":[["$","$L9",null,{"children":"cursor"}],": The last name from the current request, used for getting the next page"]}],"\n",["$","li",null,{"language":"txt","children":[["$","$L9",null,{"children":"hasMore"}],": Boolean indicating if there are more results available"]}],"\n",["$","li",null,{"language":"txt","children":[["$","$L9",null,{"children":"totalItems"}],": Total number of primary names matching your query"]}],"\n"]}],"\n",["$","$L6",null,{"level":2,"id":"best-practices","children":"Best Practices"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"Always verify ownership of both the ArNS name and ANT before attempting to set a primary name"}],"\n",["$","li",null,{"children":"Check if a primary name request already exists before submitting a new one"}],"\n",["$","li",null,{"children":"Consider implementing error handling for cases where the name or ANT doesn't exist"}],"\n",["$","li",null,{"children":"When displaying primary names in your application, always have a fallback to show the wallet address if no primary name exists"}],"\n"]}],"\n",["$","div",null,{"className":"my-6 flex gap-2.5 rounded-2xl border border-emerald-500/20 bg-emerald-50/50 p-4 leading-6 text-emerald-900 dark:border-emerald-500/30 dark:bg-emerald-500/5 dark:text-emerald-200 dark:[--tw-prose-links-hover:theme(colors.emerald.300)] dark:[--tw-prose-links:theme(colors.white)]","children":[["$","svg",null,{"viewBox":"0 0 16 16","aria-hidden":"true","className":"mt-1 h-4 w-4 flex-none fill-emerald-500 stroke-white dark:fill-emerald-200/20 dark:stroke-emerald-200","children":[["$","circle",null,{"cx":"8","cy":"8","r":"8","strokeWidth":"0"}],["$","path",null,{"fill":"none","strokeLinecap":"round","strokeLinejoin":"round","strokeWidth":"1.5","d":"M6.75 7.75h1.5v3.5"}],["$","circle",null,{"cx":"8","cy":"4","r":".5","fill":"none"}]]}],["$","div",null,{"className":"[&>:first-child]:mt-0 [&>:last-child]:mb-0","children":["$","p",null,{"children":"Primary names simplify user identification across the permaweb by replacing complex wallet addresses with human-readable names, similar to how usernames work on social platforms."}]}]]}]]}],["$","footer",null,{"className":"mx-auto mt-16 w-full max-w-2xl lg:max-w-5xl"}]]}],null,["$","$L16",null,{"children":"$L17"}]]}],{},null]},null]},null]},null]},null],["$","$2","h",{"children":[null,["$","$2","UL48qZdk1wXoKfdwooFNe",{"children":[["$","$L18",null,{"children":"$L19"}],["$","$L1a",null,{"children":"$L1b"}],null]}]]}]]],"m":"$undefined","G":["$1c","$undefined"],"s":false,"S":true}
1b:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
19:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"AR.IO Network Docs - Managing Primary Names"}],["$","meta","2",{"name":"description","content":"Learn how to request, approve, and manage primary names for ANTs"}],["$","meta","3",{"property":"og:title","content":"AR.IO Network Docs - Managing Primary Names"}],["$","meta","4",{"property":"og:description","content":"Learn how to request, approve, and manage primary names for ANTs"}],["$","meta","5",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","6",{"name":"twitter:site","content":"@ar_io_network"}],["$","meta","7",{"name":"twitter:title","content":"AR.IO Network Docs"}],["$","meta","8",{"name":"twitter:description","content":"Learn how to request, approve, and manage primary names for ANTs"}],["$","meta","9",{"name":"twitter:image","content":"https://res.cloudinary.com/dopbvlqgc/image/upload/v1706802732/ario_v2nv53.png"}],["$","link","10",{"rel":"icon","href":"https://arweave.net/IXl1JBlE_gsOaXGa6yE1eifPu7ekH-qSaGR9b5GU88Y"}]]
17:null
1d:I[78534,["7866","static/chunks/2a351a00-0c6ce40bfa6ca10a.js","9268","static/chunks/aaea2bcf-5ed8e0add326de85.js","2178","static/chunks/2178-de59cf2b1efc07cd.js","3140","static/chunks/3140-08f9823aa16c628b.js","7448","static/chunks/7448-4c49021a3353163c.js","1131","static/chunks/1131-1831c022227c3d7c.js","1753","static/chunks/1753-352fbbc493e3cee0.js","3569","static/chunks/3569-df18b5fb76b07ef8.js","7177","static/chunks/app/layout-4927367f57840fbc.js"],"Providers"]
1e:I[319,["7866","static/chunks/2a351a00-0c6ce40bfa6ca10a.js","9268","static/chunks/aaea2bcf-5ed8e0add326de85.js","2178","static/chunks/2178-de59cf2b1efc07cd.js","3140","static/chunks/3140-08f9823aa16c628b.js","7448","static/chunks/7448-4c49021a3353163c.js","1131","static/chunks/1131-1831c022227c3d7c.js","1753","static/chunks/1753-352fbbc493e3cee0.js","3569","static/chunks/3569-df18b5fb76b07ef8.js","7177","static/chunks/app/layout-4927367f57840fbc.js"],"Layout"]
1f:I[67087,["2178","static/chunks/2178-de59cf2b1efc07cd.js","4345","static/chunks/app/not-found-586589e5bfbf678a.js"],"default"]
3:["$","html",null,{"lang":"en","className":"h-full","suppressHydrationWarning":true,"children":["$","body",null,{"className":"flex min-h-full bg-white antialiased dark:bg-zinc-900","children":["$","$L1d",null,{"children":["$","div",null,{"className":"w-full","children":["$","$L1e",null,{"allSections":{"/":[],"/community-resources":[],"/build/ar-io-sdk":[{"title":"Overview","id":"overview"},{"title":"AR.IO Network","id":"ar-io-network"},{"title":"Gateways","id":"gateways"},{"title":"ARIO Token","id":"ario-token"},{"title":"ArNS","id":"ar-ns"}],"/build/gateways":[{"title":"Overview","id":"overview"},{"title":"Gateway functions","id":"gateway-functions"},{"title":"AR.IO Gateway Benefits","id":"ar-io-gateway-benefits"},{"title":"Gateway Modularity","id":"gateway-modularity"},{"title":"ARNS Indexing and Routing","id":"arns-indexing-and-routing"}],"/build/guides":[],"/learn/ario-contract":[{"title":"Overview","id":"overview"},{"title":"Protocol Balance","id":"protocol-balance"},{"title":"Cross-Chain Signature Support","id":"cross-chain-signature-support"}],"/learn/arns":[{"title":"Overview","id":"overview"},{"title":"Name Registration","id":"name-registration"},{"title":"Primary Names","id":"primary-names"},{"title":"Arweave Name Token (ANT)","id":"arweave-name-token-ant"},{"title":"Addressing Variable Market Conditions","id":"addressing-variable-market-conditions"},{"title":"Dynamic Pricing Model","id":"dynamic-pricing-model"},{"title":"Returned Name Premiums (RNP)","id":"returned-name-premiums-rnp"},{"title":"Gateway Operator ArNS Discount","id":"gateway-operator-ar-ns-discount"}],"/learn/foundation":[{"title":"What is the AR.IO Foundation?","id":"what-is-the-ar-io-foundation"},{"title":"Guiding Philosophy","id":"guiding-philosophy"}],"/learn/glossary":[{"title":"AO Computer (AO):","id":"ao-computer-ao"},{"title":"Arweave Name System (ArNS):","id":"arweave-name-system-ar-ns"},{"title":"Arweave Name Token (ANT), “Name Token”:","id":"arweave-name-token-ant-name-token"},{"title":"Arweave Network Standards (ANS):","id":"arweave-network-standards-ans"},{"title":"Base Layer Transaction:","id":"base-layer-transaction"},{"title":"Bundle, bundling:","id":"bundle-bundling"},{"title":"Bundled Data Item (BDI):","id":"bundled-data-item-bdi"},{"title":"Bundler:","id":"bundler"},{"title":"Chunk:","id":"chunk"},{"title":"Decentralized, decentralization, etc:","id":"decentralized-decentralization-etc"},{"title":"Epoch:","id":"epoch"},{"title":"Gateway:","id":"gateway"},{"title":"Gateway Address Registry (GAR):","id":"gateway-address-registry-gar"},{"title":"Indexing:","id":"indexing"},{"title":"Layer 2 Infrastructure:","id":"layer-2-infrastructure"},{"title":"Manifest (aka Path Manifest, Arweave Manifest):","id":"manifest-aka-path-manifest-arweave-manifest"},{"title":"Mempool:","id":"mempool"},{"title":"Message:","id":"message"},{"title":"Miner (aka Arweave Node):","id":"miner-aka-arweave-node"},{"title":"Native Address:","id":"native-address"},{"title":"Normalized Address:","id":"normalized-address"},{"title":"Observer:","id":"observer"},{"title":"Optimistic Indexing:","id":"optimistic-indexing"},{"title":"Owner:","id":"owner"},{"title":"Owner Address:","id":"owner-address"},{"title":"Period:","id":"period"},{"title":"Permanent Cloud Network:","id":"permanent-cloud-network"},{"title":"Permaweb:","id":"permaweb"},{"title":"Process ID (PID):","id":"process-id-pid"},{"title":"Protocol Balance:","id":"protocol-balance"},{"title":"Protocol Rewards:","id":"protocol-rewards"},{"title":"Public Key:","id":"public-key"},{"title":"Seeding:","id":"seeding"},{"title":"Staking (of tokens):","id":"staking-of-tokens"},{"title":"Stake Redelegation:","id":"stake-redelegation"},{"title":"Stake Redemption:","id":"stake-redemption"},{"title":"Transaction ID (txID):","id":"transaction-id-tx-id"},{"title":"Trust-minimization:","id":"trust-minimization"},{"title":"Vault:","id":"vault"},{"title":"Wayfinder Protocol:","id":"wayfinder-protocol"}],"/learn/introduction":[{"title":"TL;DR","id":"tl-dr"},{"title":"What is AR.IO","id":"what-is-ar-io"},{"title":"Why AR.IO ?","id":"why-ar-io"}],"/learn/labs":[{"title":"What is AR.IO Labs?","id":"what-is-ar-io-labs"}],"/learn/network-composition":[{"title":"Overview","id":"overview"},{"title":"Composition of the Permanent Cloud","id":"composition-of-the-permanent-cloud"}],"/learn/staking":[{"title":"Overview","id":"overview"},{"title":"Gateway Staking","id":"gateway-staking"},{"title":"Delegated Staking","id":"delegated-staking"},{"title":"Stake Redelegation","id":"stake-redelegation"},{"title":"Redeeming Delegated Stake for ArNS","id":"redeeming-delegated-stake-for-ar-ns"},{"title":"Expedited Withdrawal Fees","id":"expedited-withdrawal-fees"}],"/learn/token":[{"title":"Overview","id":"overview"},{"title":"Adding tARIO Token to ArConnect Wallet","id":"adding-t-ario-token-to-ar-connect-wallet"}],"/build/ar-io-sdk/ANTs":[],"/build/ar-io-sdk/APIs":[],"/build/ar-io-sdk/ant-registry":[{"title":"Overview","id":"overview"}],"/build/ar-io-sdk/ario":[],"/build/ar-io-sdk/configurations":[],"/build/ar-io-sdk/examples":[],"/build/ar-io-sdk/getting-started":[{"title":"Prerequisites","id":"prerequisites"},{"title":"Installation","id":"installation"},{"title":"Quick Start","id":"quick-start"}],"/build/ar-io-sdk/logging":[],"/build/ar-io-sdk/pagination":[],"/build/ar-io-sdk/release-notes":[{"title":"Overview","id":"overview"}],"/build/ar-io-sdk/resources":[],"/build/ar-io-sdk/tokens":[],"/build/ar-io-sdk/upgrade-guides":[],"/build/gateways/admin":[{"title":"Overview","id":"overview"},{"title":"Debug","id":"debug"},{"title":"Queue Transaction","id":"queue-transaction"},{"title":"Block Data","id":"block-data"}],"/build/gateways/advanced":[{"title":"Overview","id":"overview"},{"title":"Data Storage Location","id":"data-storage-location"},{"title":"Admin API Key","id":"admin-api-key"},{"title":"Wallet Association","id":"wallet-association"},{"title":"Unbundling","id":"unbundling"},{"title":"Content Moderation","id":"content-moderation"},{"title":"Contiguous Data Cleanup","id":"contiguous-data-cleanup"},{"title":"ArNS Resolver","id":"ar-ns-resolver"}],"/build/gateways/arns-resolution":[{"title":"Overview","id":"overview"},{"title":"Initial Caching","id":"initial-caching"},{"title":"Cache Refreshing","id":"cache-refreshing"},{"title":"Gateway TTL Override","id":"gateway-ttl-override"}],"/build/gateways/bundler":[{"title":"Overview","id":"overview"},{"title":"Getting Started","id":"getting-started"},{"title":"Starting and Stopping the Bundler","id":"starting-and-stopping-the-bundler"}],"/build/gateways/delegated-staking":[{"title":"Overview","id":"overview"}],"/build/gateways/env":[{"title":"Overview","id":"overview"},{"title":"Variables","id":"variables"}],"/build/gateways/gateway-network":[{"title":"Overview","id":"overview"},{"title":"Gateway Address Registry (GAR)","id":"gateway-address-registry-gar"},{"title":"Data Sharing","id":"data-sharing"},{"title":"Data Verification","id":"data-verification"}],"/build/gateways/grafana":[{"title":"Overview","id":"overview"},{"title":"Deploying Grafana","id":"deploying-grafana"},{"title":"Checking the logs","id":"checking-the-logs"},{"title":"Troubleshooting permission errors","id":"troubleshooting-permission-errors"},{"title":"Configure Nginx","id":"configure-nginx"},{"title":"Accessing Grafana","id":"accessing-grafana"},{"title":"Dashboards","id":"dashboards"}],"/build/gateways/join-network":[{"title":"Prerequisites","id":"prerequisites"},{"title":"Joining Via Network Portal","id":"joining-via-network-portal"},{"title":"Joining Programmatically","id":"joining-programmatically"}],"/build/gateways/linux-setup":[{"title":"Overview","id":"overview"},{"title":"System Requirements","id":"system-requirements"},{"title":"Install Packages","id":"install-packages"},{"title":"Install the Node","id":"install-the-node"},{"title":"Set up Networking","id":"set-up-networking"}],"/build/gateways/moderation":[{"title":"Overview","id":"overview"},{"title":"Authentication","id":"authentication"},{"title":"Block Data","id":"block-data"},{"title":"Block ArNS Name","id":"block-ar-ns-name"}],"/build/gateways/networking":[],"/build/gateways/observer":[{"title":"Overview","id":"overview"},{"title":"Observation Protocol","id":"observation-protocol"},{"title":"Onchain Reports","id":"onchain-reports"},{"title":"Selection of Observers","id":"selection-of-observers"},{"title":"Performance Evaluation","id":"performance-evaluation"},{"title":"Reward Distribution","id":"reward-distribution"},{"title":"Handling Deficient Gateways","id":"handling-deficient-gateways"}],"/build/gateways/release-notes":[{"title":"Overview","id":"overview"},{"title":"[Release 25] - 2025-02-07","id":"release-25-2025-02-07"},{"title":"[Release 24] - 2025-02-03","id":"release-24-2025-02-03"},{"title":"[Release 23] - 2025-01-13","id":"release-23-2025-01-13"},{"title":"[Release 22] - 2024-12-18","id":"release-22-2024-12-18"},{"title":"[Release 21] - 2024-12-05","id":"release-21-2024-12-05"},{"title":"[Release 20] - 2024-11-15","id":"release-20-2024-11-15"},{"title":"[Release 19] - 2024-10-21","id":"release-19-2024-10-21"},{"title":"[Release 18] - 2024-10-01","id":"release-18-2024-10-01"},{"title":"[Release 17] - 2024-09-09","id":"release-17-2024-09-09"},{"title":"[Release 16] - 2024-08-09","id":"release-16-2024-08-09"},{"title":"[Release 15] - 2024-07-19","id":"release-15-2024-07-19"},{"title":"[Release 14] - 2024-06-26","id":"release-14-2024-06-26"},{"title":"[Release 13] - 2024-06-24","id":"release-13-2024-06-24"},{"title":"[Release 12] - 2024-06-05","id":"release-12-2024-06-05"},{"title":"[Release 11] - 2024-05-21","id":"release-11-2024-05-21"},{"title":"[Release 10] - 2024-05-20","id":"release-10-2024-05-20"},{"title":"[Release 9] - 2024-04-10","id":"release-9-2024-04-10"},{"title":"[Release 8] - 2024-03-14","id":"release-8-2024-03-14"},{"title":"[Release 7] - 2024 - 02 - 14","id":"release-7-2024-02-14"},{"title":"[Release 6] - 2024-01-29","id":"release-6-2024-01-29"},{"title":"[Release 5] - 2024-01-25","id":"release-5-2024-01-25"},{"title":"[Release 4] - 2024-01-11","id":"release-4-2024-01-11"},{"title":"[Release 3] - 2023-12-05","id":"release-3-2023-12-05"}],"/build/gateways/setup-and-operation":[],"/build/gateways/troubleshooting":[{"title":"My Gateway Seems to be Running but...","id":"my-gateway-seems-to-be-running-but"},{"title":"My Gateway was Running, but now it isn't","id":"my-gateway-was-running-but-now-it-isnt"},{"title":"I am having Trouble Getting my Gateway Set up","id":"i-am-having-trouble-getting-my-gateway-set-up"},{"title":"Quick Lookup","id":"quick-lookup"}],"/build/gateways/upgrading":[{"title":"Prerequisites","id":"prerequisites"},{"title":"Checking your Release Number","id":"checking-your-release-number"},{"title":"Upgrade Steps","id":"upgrade-steps"}],"/build/gateways/windows-setup":[{"title":"Overview","id":"overview"},{"title":"Prerequisites","id":"prerequisites"},{"title":"Install Required Packages","id":"install-required-packages"},{"title":"Clone the Repository","id":"clone-the-repository"},{"title":"Create the Environment File","id":"create-the-environment-file"},{"title":"Supply Your Observer Wallet Keyfile:","id":"supply-your-observer-wallet-keyfile"},{"title":"Start the Docker Containers","id":"start-the-docker-containers"},{"title":"Set Up Router Port Forwarding","id":"set-up-router-port-forwarding"},{"title":"Install and Configure NGINX Docker","id":"install-and-configure-nginx-docker"}],"/build/guides/arlink":[{"title":"Overview","id":"overview"},{"title":"How it works","id":"how-it-works"},{"title":"Dashboard","id":"dashboard"},{"title":"New Deployment","id":"new-deployment"},{"title":"Updates","id":"updates"}],"/build/guides/arns-viewer":[{"title":"Overview","id":"overview"},{"title":"Getting Started","id":"getting-started"},{"title":"Install AR.IO SDK","id":"install-ar-io-sdk"},{"title":"Strip Default Content","id":"strip-default-content"},{"title":"Add Utilities","id":"add-utilities"},{"title":"Build Home Page","id":"build-home-page"},{"title":"Grid Component","id":"grid-component"},{"title":"Home Page","id":"home-page"},{"title":"Names Page","id":"names-page"},{"title":"Finish the Grid Component","id":"finish-the-grid-component"},{"title":"View Project","id":"view-project"},{"title":"CSS","id":"css"},{"title":"Deploy With Turbo","id":"deploy-with-turbo"},{"title":"References","id":"references"}],"/build/guides/gql":[{"title":"Overview","id":"overview"},{"title":"Constructing a Query","id":"constructing-a-query"},{"title":"Making a Query","id":"making-a-query"}],"/build/guides/managing-undernames":[{"title":"Overview","id":"overview"},{"title":"Creating an Undername","id":"creating-an-undername"},{"title":"Updating an Undername","id":"updating-an-undername"},{"title":"Removing an Undername","id":"removing-an-undername"},{"title":"Increasing Undername Support","id":"increasing-undername-support"}],"/build/guides/permaweb-deploy":[{"title":"Overview","id":"overview"},{"title":"Getting Started","id":"getting-started"},{"title":"Deploying App","id":"deploying-app"}],"/build/guides/primary-names":[{"title":"Overview","id":"overview"},{"title":"Setting a Primary Name with arns.app","id":"setting-a-primary-name-with-arns-app"},{"title":"Setting a Primary Name With the AR.IO SDK","id":"setting-a-primary-name-with-the-ar-io-sdk"},{"title":"Querying Primary Names","id":"querying-primary-names"},{"title":"Best Practices","id":"best-practices"}],"/learn/concepts/manifests":[{"title":"Overview","id":"overview"},{"title":"What is a Manifest","id":"what-is-a-manifest"},{"title":"Specifications","id":"specifications"}],"/learn/concepts/normalized-addresses":[{"title":"Overview","id":"overview"},{"title":"At A Glance","id":"at-a-glance"},{"title":"Public Keys and Addresses","id":"public-keys-and-addresses"},{"title":"Normalizing Addresses","id":"normalizing-addresses"}],"/learn/concepts/sandboxing":[{"title":"Overview","id":"overview"},{"title":"TLS and its Role in Browser Sandboxing","id":"tls-and-its-role-in-browser-sandboxing"},{"title":"Deriving Sandbox Value","id":"deriving-sandbox-value"}],"/learn/concepts/wayfinder":[{"title":"Overview","id":"overview"},{"title":"Browser Integration","id":"browser-integration"},{"title":"Internal Application Integration","id":"internal-application-integration"},{"title":"Benefits of Wayfinder Over Hardcoded Gateway Links","id":"benefits-of-wayfinder-over-hardcoded-gateway-links"},{"title":"Use Cases","id":"use-cases"},{"title":"How it Works","id":"how-it-works"},{"title":"Wayfinder App","id":"wayfinder-app"}],"/learn/guides/ants":[{"title":"Overview","id":"overview"}],"/learn/guides/ants-on-bazar":[{"title":"Overview","id":"overview"},{"title":"Bazar Profile","id":"bazar-profile"},{"title":"Transfer ANT to the Profile","id":"transfer-ant-to-the-profile"},{"title":"Restore Controllers","id":"restore-controllers"}],"/build/ar-io-sdk/ant-registry/access-control-list":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"output","id":"output"}],"/build/ar-io-sdk/ant-registry/register":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/approve-primary-name-request":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/configuration":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/get-controllers":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ants/get-handlers":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ants/get-info":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ants/get-logo":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ants/get-owner":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ants/get-records":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ants/get-state":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ants/reassign-name":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/release-name":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/remove-controller":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/remove-primary-names":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/remove-record":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/remove-undername-record":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/set-base-name-record":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/set-controller":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/set-description":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/set-keywords":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/set-logo":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/set-name":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/set-record":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/set-ticker":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/set-undername-record":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/transfer":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ario/configuration":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/gateways/observer/troubleshooting":[{"title":"Overview","id":"overview"},{"title":"Observer not running and/or unable to connect","id":"observer-not-running-and-or-unable-to-connect"},{"title":"Observer wallet has no AR","id":"observer-wallet-has-no-ar"},{"title":"Observer wallet ... does not match the 'observerWallet' set on the gateway ...","id":"observer-wallet-does-not-match-the-observer-wallet-set-on-the-gateway"},{"title":"Uncertain - confirm your OBSERVER_WALLET is set in the .env file and corresponding wallet is located in wallets/< address >.json...","id":"uncertain-confirm-your-observer-wallet-is-set-in-the-env-file-and-corresponding-wallet-is-located-in-wallets-address-json"}],"/learn/guides/ants/managing":[{"title":"Overview","id":"overview"},{"title":"Names","id":"names"},{"title":"ANTs","id":"ants"}],"/learn/guides/ants/registering":[{"title":"Overview","id":"overview"},{"title":"Connect Your Wallet","id":"connect-your-wallet"},{"title":"Checking Availability","id":"checking-availability"},{"title":"Configure Your Purchase","id":"configure-your-purchase"},{"title":"Confirm Your Purchase","id":"confirm-your-purchase"}],"/build/ar-io-sdk/ario/arns/buy-record":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ario/arns/extend-lease":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ario/arns/get-arns-record":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/arns/get-arns-records":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/arns/get-arns-returned-name":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/arns/get-arns-returned-names":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/arns/get-cost-details":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/arns/get-demand-factor":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/arns/get-token-cost":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/arns/increase-undername-limit":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ario/epochs/get-current-epoch":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/epochs/get-distributions":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/epochs/get-epoch":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/epochs/get-observations":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/epochs/get-precribed-observers":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/epochs/save-observations":[],"/build/ar-io-sdk/ario/gateways/cancel-withdrawal":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ario/gateways/decrease-delegate-stake":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"}],"/build/ar-io-sdk/ario/gateways/decrease-operator-stake":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ario/gateways/get-allowed-delegates":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/gateways/get-delegations":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/gateways/get-gateway":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/gateways/get-gateway-delegates":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/gateways/get-gateway-vaults":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/gateways/get-gateways":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/gateways/get-redelegation-fee":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/gateways/increase-delegate-stake":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"}],"/build/ar-io-sdk/ario/gateways/increase-operator-stake":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ario/gateways/instant-withdrawal":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ario/gateways/join-network":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"}],"/build/ar-io-sdk/ario/gateways/leave-network":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"}],"/build/ar-io-sdk/ario/gateways/redelegate-stake":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ario/gateways/update-gateway-settings":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"}],"/build/ar-io-sdk/ario/general/get-balance":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/general/get-balances":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/general/get-info":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/general/get-token-supply":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"},{"title":"Types","id":"types"}],"/build/ar-io-sdk/ario/general/transfer":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/primary-names/get-primary-name":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/primary-names/get-primary-name-request":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/primary-names/get-primary-names":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/primary-names/request-primary-name":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ario/vaults/get-vault":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/vaults/get-vaults":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"},{"title":"Output","id":"output"}],"/build/gateways/networking/certbot/cloudflare":[],"/build/gateways/networking/certbot/namecheap":[]},"children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","$L1f",null,{}],"notFoundStyles":[]}]}]}]}]}]}]
