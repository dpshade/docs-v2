2:"$Sreact.fragment"
4:I[15244,[],""]
5:I[43866,[],""]
6:I[92179,["7866","static/chunks/2a351a00-0c6ce40bfa6ca10a.js","9268","static/chunks/aaea2bcf-5ed8e0add326de85.js","2178","static/chunks/2178-de59cf2b1efc07cd.js","3140","static/chunks/3140-08f9823aa16c628b.js","1753","static/chunks/1753-375c76cbf8b20ecd.js","930","static/chunks/app/ai/sdk/page-0415fb5fa411cd70.js"],"Heading"]
7:I[25856,["7866","static/chunks/2a351a00-0c6ce40bfa6ca10a.js","9268","static/chunks/aaea2bcf-5ed8e0add326de85.js","2178","static/chunks/2178-de59cf2b1efc07cd.js","3140","static/chunks/3140-08f9823aa16c628b.js","1753","static/chunks/1753-375c76cbf8b20ecd.js","930","static/chunks/app/ai/sdk/page-0415fb5fa411cd70.js"],"Pre"]
8:I[25856,["7866","static/chunks/2a351a00-0c6ce40bfa6ca10a.js","9268","static/chunks/aaea2bcf-5ed8e0add326de85.js","2178","static/chunks/2178-de59cf2b1efc07cd.js","3140","static/chunks/3140-08f9823aa16c628b.js","1753","static/chunks/1753-375c76cbf8b20ecd.js","930","static/chunks/app/ai/sdk/page-0415fb5fa411cd70.js"],"Code"]
5f:I[86213,[],"OutletBoundary"]
61:I[86213,[],"MetadataBoundary"]
63:I[86213,[],"ViewportBoundary"]
65:I[34835,[],""]
1:HL["/docs-v2/_next/static/css/2402520d5b921a75.css","style"]
9:T641,<span><span style="color: var(--shiki-token-comment)">// ARIO mainnet process ID</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIO_MAINNET_PROCESS_ID</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;qNvAoz0TgcH7DMg8BCVn8jF32QH5L6T29VjHxhHqqGE&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">DEFAULT_TTL_SECONDS</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">900</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">MAX_PAGINATION_LIMIT</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1000</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>a:T754,<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  signer</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ArweaveSigner</span><span style="color: var(--shiki-color-text)">(jwk)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  process</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AOProcess</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">    processId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;qNvAoz0TgcH7DMg8BCVn8jF32QH5L6T29VjHxhHqqGE&#39;</span></span>
<span><span style="color: var(--shiki-color-text)">  })</span></span>
<span><span style="color: var(--shiki-color-text)">});</span></span>
<span></span>b:T8f9,<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ARIOConfig</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  process</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AOProcess</span><span style="color: var(--shiki-color-text)">;        </span><span style="color: var(--shiki-token-comment)">// Pre-configured AOProcess instance</span></span>
<span><span style="color: var(--shiki-color-text)">  processId</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;         </span><span style="color: var(--shiki-token-comment)">// ID of the AO process (defaults to mainnet)</span></span>
<span><span style="color: var(--shiki-color-text)">  signer</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ContractSigner</span><span style="color: var(--shiki-color-text)">;    </span><span style="color: var(--shiki-token-comment)">// ArweaveSigner or ArConnectSigner</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Initialize ARIO</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">(config</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> ARIOConfig);</span></span>
<span></span>c:Tca9,<span><span style="color: var(--shiki-token-keyword)">type</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ARIOConfigNoSigner</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  process</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AOProcess</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  processId</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  arweave</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Arweave</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">};</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">type</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ARIOConfigWithSigner</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  signer</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ArweaveSigner</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ArConnectSigner</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  process</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AOProcess</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  processId</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  arweave</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Arweave</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">};</span></span>
<span></span>d:T1efd,<span><span style="color: var(--shiki-token-comment)">// Read-only client (no authentication)</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">();</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// NodeJS authenticated client</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  signer</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ArweaveSigner</span><span style="color: var(--shiki-color-text)">(jwk)</span></span>
<span><span style="color: var(--shiki-color-text)">});</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Web authenticated client</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  signer</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ArConnectSigner</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">window</span><span style="color: var(--shiki-color-text)">.arweaveWallet)</span></span>
<span><span style="color: var(--shiki-color-text)">});</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Custom AO process configuration</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  process</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AOProcess</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">    processId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIO_MAINNET_PROCESS_ID</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    ao</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">connect</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">      MU_URL</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;https://mu.arweave.net&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-comment)">// customizable</span></span>
<span><span style="color: var(--shiki-color-text)">      CU_URL</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;https://cu.arweave.net&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-comment)">// customizable</span></span>
<span><span style="color: var(--shiki-color-text)">      GRAPHQL_URL</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;https://arweave.net/graphql&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// customizable</span></span>
<span><span style="color: var(--shiki-color-text)">      GATEWAY_URL</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;https://arweave.net&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// customizable</span></span>
<span><span style="color: var(--shiki-color-text)">    })</span></span>
<span><span style="color: var(--shiki-color-text)">  })</span></span>
<span><span style="color: var(--shiki-color-text)">});</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Custom process ID (for non-mainnet)</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  processId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;custom_process_id&#39;</span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// Use specific AO process</span></span>
<span><span style="color: var(--shiki-color-text)">});</span></span>
<span></span>e:T742,<span><span style="color: var(--shiki-token-comment)">// Read-only client - can only call &quot;Authentication: Not required&quot; methods</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">readOnlyClient</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">();</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Authenticated client - can call all methods</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">authenticatedClient</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  signer</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ArweaveSigner</span><span style="color: var(--shiki-color-text)">(jwk)</span></span>
<span><span style="color: var(--shiki-color-text)">});</span></span>
<span></span>f:Tc36,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getInfo</span><span style="color: var(--shiki-color-text)">(): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-color-text)">&lt;{</span></span>
<span><span style="color: var(--shiki-color-text)">  Name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;           </span><span style="color: var(--shiki-token-comment)">// Contract name</span></span>
<span><span style="color: var(--shiki-color-text)">  Ticker</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;         </span><span style="color: var(--shiki-token-comment)">// Token ticker symbol</span></span>
<span><span style="color: var(--shiki-color-text)">  Logo</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;          </span><span style="color: var(--shiki-token-comment)">// Logo transaction ID</span></span>
<span><span style="color: var(--shiki-color-text)">  Denomination</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;   </span><span style="color: var(--shiki-token-comment)">// Token denomination</span></span>
<span><span style="color: var(--shiki-color-text)">  Handlers</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">[];    </span><span style="color: var(--shiki-token-comment)">// List of supported handlers</span></span>
<span><span style="color: var(--shiki-color-text)">  LastCreatedEpochIndex</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;      </span><span style="color: var(--shiki-token-comment)">// Index of last created epoch</span></span>
<span><span style="color: var(--shiki-color-text)">  LastDistributedEpochIndex</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;  </span><span style="color: var(--shiki-token-comment)">// Index of last distributed epoch</span></span>
<span><span style="color: var(--shiki-color-text)">}&gt;;</span></span>
<span></span>10:Tc2d,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getTokenSupply</span><span style="color: var(--shiki-color-text)">(): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-color-text)">&lt;{</span></span>
<span><span style="color: var(--shiki-color-text)">  total</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;          </span><span style="color: var(--shiki-token-comment)">// Total token supply</span></span>
<span><span style="color: var(--shiki-color-text)">  circulating</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;    </span><span style="color: var(--shiki-token-comment)">// Tokens in circulation</span></span>
<span><span style="color: var(--shiki-color-text)">  locked</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;         </span><span style="color: var(--shiki-token-comment)">// Tokens locked in vaults</span></span>
<span><span style="color: var(--shiki-color-text)">  withdrawn</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;      </span><span style="color: var(--shiki-token-comment)">// Tokens in withdrawal</span></span>
<span><span style="color: var(--shiki-color-text)">  delegated</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;      </span><span style="color: var(--shiki-token-comment)">// Tokens delegated to gateways</span></span>
<span><span style="color: var(--shiki-color-text)">  staked</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;        </span><span style="color: var(--shiki-token-comment)">// Tokens staked by operators</span></span>
<span><span style="color: var(--shiki-color-text)">  protocolBalance</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">; </span><span style="color: var(--shiki-token-comment)">// Tokens held by protocol</span></span>
<span><span style="color: var(--shiki-color-text)">}&gt;;</span></span>
<span></span>11:T8e0,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">transfer</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  {</span></span>
<span><span style="color: var(--shiki-color-text)">    target</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string;         </span><span style="color: var(--shiki-token-comment)">// Recipient wallet address</span></span>
<span><span style="color: var(--shiki-color-text)">    qty: number </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> mARIOToken; </span><span style="color: var(--shiki-token-comment)">// Amount to transfer (in base units or mARIO)</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  options</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    tags?</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>12:T1b33,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getBalances</span><span style="color: var(--shiki-color-text)">(params</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> PaginationParams</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoBalanceWithAddress</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PaginationResult</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoBalanceWithAddress</span><span style="color: var(--shiki-token-keyword)">&gt;&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Where AoBalanceWithAddress is:</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoBalanceWithAddress</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  address</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  balance</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// And PaginationParams/Result are:</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">PaginationParams</span><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-function)">T</span><span style="color: var(--shiki-color-text)">&gt; {</span></span>
<span><span style="color: var(--shiki-color-text)">  cursor</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  limit</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;  </span><span style="color: var(--shiki-token-comment)">// Maximum: 1000</span></span>
<span><span style="color: var(--shiki-color-text)">  sortBy</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  sortOrder</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;asc&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;desc&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">PaginationResult</span><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-function)">T</span><span style="color: var(--shiki-color-text)">&gt; {</span></span>
<span><span style="color: var(--shiki-color-text)">  items</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">T</span><span style="color: var(--shiki-color-text)">[];</span></span>
<span><span style="color: var(--shiki-color-text)">  nextCursor</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  limit</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  totalItems</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  sortBy</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  sortOrder</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;asc&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;desc&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  hasMore</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">boolean</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>13:T2648,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getGateway</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  address</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> WalletAddress</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoGateway </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">undefined</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Where AoGateway is:</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoGateway</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  settings</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    allowDelegatedStaking</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">boolean</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;allowlist&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    delegateRewardShareRatio</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    allowedDelegates</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)">[];</span></span>
<span><span style="color: var(--shiki-color-text)">    minDelegatedStake</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    autoStake</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">boolean</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    label</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    note</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    properties</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    fqdn</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    port</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    protocol</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;https&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  };</span></span>
<span><span style="color: var(--shiki-color-text)">  stats</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    passedConsecutiveEpochs</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    failedConsecutiveEpochs</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    totalEpochCount</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    passedEpochCount</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    failedEpochCount</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    observedEpochCount</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    prescribedEpochCount</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  };</span></span>
<span><span style="color: var(--shiki-color-text)">  totalDelegatedStake</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  startTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Timestamp</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  endTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Timestamp</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  observerAddress</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  operatorStake</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  status</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;joined&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;leaving&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>14:Tbf0,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getGateways</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> PaginationParams</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoGatewayWithAddress</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PaginationResult</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoGatewayWithAddress</span><span style="color: var(--shiki-token-keyword)">&gt;&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Where AoGatewayWithAddress extends AoGateway with:</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoGatewayWithAddress</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">extends</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoGateway</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  gatewayAddress</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Valid sortBy fields from AoGatewayWithAddress:</span></span>
<span><span style="color: var(--shiki-token-comment)">// - gatewayAddress</span></span>
<span><span style="color: var(--shiki-token-comment)">// - startTimestamp</span></span>
<span><span style="color: var(--shiki-token-comment)">// - endTimestamp</span></span>
<span><span style="color: var(--shiki-token-comment)">// - totalDelegatedStake</span></span>
<span><span style="color: var(--shiki-token-comment)">// - operatorStake</span></span>
<span><span style="color: var(--shiki-token-comment)">// - status</span></span>
<span><span style="color: var(--shiki-token-comment)">// - &quot;settings.label&quot;</span></span>
<span><span style="color: var(--shiki-token-comment)">// - &quot;stats.passedConsecutiveEpochs&quot;</span></span>
<span><span style="color: var(--shiki-token-comment)">// etc.</span></span>
<span></span>15:T425,interface AoJoinNetworkParams {
  operatorStake: number | mARIOToken;  // Minimum 10,000 ARIO
  label: string;                       // Gateway label
  fqdn: string;                        // Fully qualified domain name
  port?: number;                       // Port number (default: 443)
  protocol: 'https';                   // Must be HTTPS for network
  properties?: string;                 // Optional properties transaction ID
  observerAddress?: WalletAddress;     // Observer wallet address
  autoStake?: boolean;                 // Auto-stake rewards (default: false)
  allowDelegatedStaking?: boolean | 'allowlist'; // Allow delegation (default: false)
  allowedDelegates?: WalletAddress[];  // Allowed delegate addresses if using allowlist
  delegateRewardShareRatio?: number;   // Reward share % for delegates (0-100)
  minDelegatedStake?: number;          // Minimum delegation amount
  note?: string;                       // Optional note
}

async joinNetwork(
  params: AoJoinNetworkParams,
  options?: WriteOptions
): Promise<{ id: string }>;
16:T1bd0,<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoJoinNetworkParams</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  operatorStake</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">mARIOToken</span><span style="color: var(--shiki-color-text)">;  </span><span style="color: var(--shiki-token-comment)">// Minimum 10,000 ARIO</span></span>
<span><span style="color: var(--shiki-color-text)">  label</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;                       </span><span style="color: var(--shiki-token-comment)">// Gateway label</span></span>
<span><span style="color: var(--shiki-color-text)">  fqdn</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;                        </span><span style="color: var(--shiki-token-comment)">// Fully qualified domain name</span></span>
<span><span style="color: var(--shiki-color-text)">  port</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;                       </span><span style="color: var(--shiki-token-comment)">// Port number (default: 443)</span></span>
<span><span style="color: var(--shiki-color-text)">  protocol</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;https&#39;</span><span style="color: var(--shiki-color-text)">;                   </span><span style="color: var(--shiki-token-comment)">// Must be HTTPS for network</span></span>
<span><span style="color: var(--shiki-color-text)">  properties</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;                 </span><span style="color: var(--shiki-token-comment)">// Optional properties transaction ID</span></span>
<span><span style="color: var(--shiki-color-text)">  observerAddress</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)">;     </span><span style="color: var(--shiki-token-comment)">// Observer wallet address</span></span>
<span><span style="color: var(--shiki-color-text)">  autoStake</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">boolean</span><span style="color: var(--shiki-color-text)">;                 </span><span style="color: var(--shiki-token-comment)">// Auto-stake rewards (default: false)</span></span>
<span><span style="color: var(--shiki-color-text)">  allowDelegatedStaking</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">boolean</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;allowlist&#39;</span><span style="color: var(--shiki-color-text)">; </span><span style="color: var(--shiki-token-comment)">// Allow delegation (default: false)</span></span>
<span><span style="color: var(--shiki-color-text)">  allowedDelegates</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)">[];  </span><span style="color: var(--shiki-token-comment)">// Allowed delegate addresses if using allowlist</span></span>
<span><span style="color: var(--shiki-color-text)">  delegateRewardShareRatio</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;   </span><span style="color: var(--shiki-token-comment)">// Reward share % for delegates (0-100)</span></span>
<span><span style="color: var(--shiki-color-text)">  minDelegatedStake</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;          </span><span style="color: var(--shiki-token-comment)">// Minimum delegation amount</span></span>
<span><span style="color: var(--shiki-color-text)">  note</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;                       </span><span style="color: var(--shiki-token-comment)">// Optional note</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">joinNetwork</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params: AoJoinNetworkParams</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  options</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> WriteOptions</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>17:T5d3,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">leaveNetwork</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  options</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    tags?</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>18:Teb9,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">updateGatewaySettings</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  label?</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string;</span></span>
<span><span style="color: var(--shiki-color-text)">  fqdn</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> string;</span></span>
<span><span style="color: var(--shiki-color-text)">  port</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> number;</span></span>
<span><span style="color: var(--shiki-color-text)">  protocol</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;http&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;https&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  properties</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> string;</span></span>
<span><span style="color: var(--shiki-color-text)">  observerWallet</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> string;</span></span>
<span><span style="color: var(--shiki-color-text)">  autoStake</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> boolean;</span></span>
<span><span style="color: var(--shiki-color-text)">  allowDelegatedStaking</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> boolean;</span></span>
<span><span style="color: var(--shiki-color-text)">  delegateRewardShareRatio</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> number;</span></span>
<span><span style="color: var(--shiki-color-text)">  minDelegatedStake</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> number;</span></span>
<span><span style="color: var(--shiki-color-text)">  note</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> string;</span></span>
<span><span style="color: var(--shiki-color-text)">  tags</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>19:T83e,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">increaseOperatorStake</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params: {</span></span>
<span><span style="color: var(--shiki-color-text)">    increaseQty</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> number </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> mARIOToken;  </span><span style="color: var(--shiki-token-comment)">// Amount to increase stake by</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  options</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    tags?</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>1a:T970,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">decreaseOperatorStake</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params: {</span></span>
<span><span style="color: var(--shiki-color-text)">    decreaseQty</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> number </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> mARIOToken;  </span><span style="color: var(--shiki-token-comment)">// Amount to decrease stake by</span></span>
<span><span style="color: var(--shiki-color-text)">    instant</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> boolean;                 </span><span style="color: var(--shiki-token-comment)">// If true, withdraw instantly with fee</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  options</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    tags?</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>1b:T8ea,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">increaseDelegateStake</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params: {</span></span>
<span><span style="color: var(--shiki-color-text)">    target</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string;                  </span><span style="color: var(--shiki-token-comment)">// Target gateway address</span></span>
<span><span style="color: var(--shiki-color-text)">    stakeQty: number </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> mARIOToken;   </span><span style="color: var(--shiki-token-comment)">// Amount to delegate</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  options</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    tags?</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>1c:Ta1b,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">decreaseDelegateStake</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params: {</span></span>
<span><span style="color: var(--shiki-color-text)">    target</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string;                  </span><span style="color: var(--shiki-token-comment)">// Target gateway address</span></span>
<span><span style="color: var(--shiki-color-text)">    decreaseQty: number </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> mARIOToken; </span><span style="color: var(--shiki-token-comment)">// Amount to decrease</span></span>
<span><span style="color: var(--shiki-color-text)">    instant</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> boolean;               </span><span style="color: var(--shiki-token-comment)">// If true, withdraw instantly with fee</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  options</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    tags?</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>1d:T885,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">instantWithdrawal</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params: {</span></span>
<span><span style="color: var(--shiki-color-text)">    gatewayAddress?</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string;      </span><span style="color: var(--shiki-token-comment)">// Optional gateway address</span></span>
<span><span style="color: var(--shiki-color-text)">    vaultId: string;              </span><span style="color: var(--shiki-token-comment)">// ID of the vault to withdraw from</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  options</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    tags?</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>1e:T88c,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">cancelWithdrawal</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params: {</span></span>
<span><span style="color: var(--shiki-color-text)">    gatewayAddress?</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> WalletAddress; </span><span style="color: var(--shiki-token-comment)">// Optional gateway address</span></span>
<span><span style="color: var(--shiki-color-text)">    vaultId: string;                </span><span style="color: var(--shiki-token-comment)">// ID of the vault withdrawal to cancel</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  options</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    tags?</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>1f:Tacd,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">redelegateStake</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params: {</span></span>
<span><span style="color: var(--shiki-color-text)">    target</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string;                  </span><span style="color: var(--shiki-token-comment)">// Target gateway address</span></span>
<span><span style="color: var(--shiki-color-text)">    source: string;                  </span><span style="color: var(--shiki-token-comment)">// Source gateway address</span></span>
<span><span style="color: var(--shiki-color-text)">    stakeQty: number </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> mARIOToken;   </span><span style="color: var(--shiki-token-comment)">// Amount to redelegate</span></span>
<span><span style="color: var(--shiki-color-text)">    vaultId</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> string;                </span><span style="color: var(--shiki-token-comment)">// Optional vault ID to redelegate from</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  options</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    tags?</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>20:T6b1,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getRedelegationFee</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params: {</span></span>
<span><span style="color: var(--shiki-color-text)">    address</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> WalletAddress;  </span><span style="color: var(--shiki-token-comment)">// Gateway address to check fee for</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-color-text)">&lt;{</span></span>
<span><span style="color: var(--shiki-color-text)">  redelegationFeeRate</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;     </span><span style="color: var(--shiki-token-comment)">// Fee percentage for redelegation</span></span>
<span><span style="color: var(--shiki-color-text)">  feeResetTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;       </span><span style="color: var(--shiki-token-comment)">// When fee resets to zero</span></span>
<span><span style="color: var(--shiki-color-text)">}&gt;;</span></span>
<span></span>21:T199e,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getDelegations</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params: {</span></span>
<span><span style="color: var(--shiki-color-text)">    address</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> WalletAddress;</span></span>
<span><span style="color: var(--shiki-color-text)">  } </span><span style="color: var(--shiki-token-keyword)">&amp;</span><span style="color: var(--shiki-color-text)"> PaginationParams</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoDelegation</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PaginationResult</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoDelegation</span><span style="color: var(--shiki-token-keyword)">&gt;&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Where AoDelegation is:</span></span>
<span><span style="color: var(--shiki-token-keyword)">type</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoDelegation</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoStakeDelegation</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoVaultDelegation</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoStakeDelegation</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;stake&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  gatewayAddress</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  delegationId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  startTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Timestamp</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  balance</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoVaultDelegation</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;vault&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  gatewayAddress</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  delegationId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  vaultId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">TransactionId</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  balance</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  startTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Timestamp</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  endTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Timestamp</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>22:T55b,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getAllowedDelegates</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params: {</span></span>
<span><span style="color: var(--shiki-color-text)">    address</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> WalletAddress;</span></span>
<span><span style="color: var(--shiki-color-text)">  } </span><span style="color: var(--shiki-token-keyword)">&amp;</span><span style="color: var(--shiki-color-text)"> PaginationParams</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">WalletAddress</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PaginationResult</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">WalletAddress</span><span style="color: var(--shiki-token-keyword)">&gt;&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>23:Tade,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getGatewayDelegates</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params: {</span></span>
<span><span style="color: var(--shiki-color-text)">    address</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> WalletAddress;</span></span>
<span><span style="color: var(--shiki-color-text)">  } </span><span style="color: var(--shiki-token-keyword)">&amp;</span><span style="color: var(--shiki-color-text)"> PaginationParams</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoGatewayDelegateWithAddress</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PaginationResult</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoGatewayDelegateWithAddress</span><span style="color: var(--shiki-token-keyword)">&gt;&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Where AoGatewayDelegateWithAddress is:</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoGatewayDelegateWithAddress</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  address</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  delegatedStake</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  startTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Timestamp</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>24:Tcfb,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getGatewayVaults</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params: {</span></span>
<span><span style="color: var(--shiki-color-text)">    address</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> WalletAddress;</span></span>
<span><span style="color: var(--shiki-color-text)">  } </span><span style="color: var(--shiki-token-keyword)">&amp;</span><span style="color: var(--shiki-color-text)"> PaginationParams</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoGatewayVault</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PaginationResult</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoGatewayVault</span><span style="color: var(--shiki-token-keyword)">&gt;&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Where AoGatewayVault is:</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoGatewayVault</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  cursorId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  vaultId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">TransactionId</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  balance</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  endTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Timestamp</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  startTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Timestamp</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>25:T940,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getVault</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  address</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> WalletAddress;</span></span>
<span><span style="color: var(--shiki-color-text)">  vaultId: string;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoVaultData </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">undefined</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Where AoVaultData is:</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoVaultData</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  balance</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  startTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Timestamp</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  endTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Timestamp</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>26:Tb54,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getVaults</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> PaginationParams</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoWalletVault</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PaginationResult</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoWalletVault</span><span style="color: var(--shiki-token-keyword)">&gt;&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Where AoWalletVault extends AoVaultData with:</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoWalletVault</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">extends</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoVaultData</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  address</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  vaultId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Valid sortBy fields:</span></span>
<span><span style="color: var(--shiki-token-comment)">// - address</span></span>
<span><span style="color: var(--shiki-token-comment)">// - vaultId</span></span>
<span><span style="color: var(--shiki-token-comment)">// - balance</span></span>
<span><span style="color: var(--shiki-token-comment)">// - startTimestamp</span></span>
<span><span style="color: var(--shiki-token-comment)">// - endTimestamp</span></span>
<span></span>27:T24d7,<span><span style="color: var(--shiki-token-comment)">// Overloads:</span></span>
<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getEpoch</span><span style="color: var(--shiki-color-text)">(epoch: EpochInput): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoEpochData</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoEpochDistributed</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">undefined</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getEpoch</span><span style="color: var(--shiki-color-text)">(): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoEpochData</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoEpochDistributionTotalsData</span><span style="color: var(--shiki-token-keyword)">&gt;&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Where EpochInput is:</span></span>
<span><span style="color: var(--shiki-token-keyword)">type</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">EpochInput</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  timestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">} </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  epochIndex</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">} </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">undefined</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// And AoEpochData is:</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoEpochData</span><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-function)">D</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoEpochDistributionData</span><span style="color: var(--shiki-color-text)">&gt; {</span></span>
<span><span style="color: var(--shiki-color-text)">  epochIndex</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  startHeight</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  observations</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    failureSummaries</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Record</span><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)">[]&gt;;</span></span>
<span><span style="color: var(--shiki-color-text)">    reports</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Record</span><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">TransactionId</span><span style="color: var(--shiki-color-text)">&gt;;</span></span>
<span><span style="color: var(--shiki-color-text)">  };</span></span>
<span><span style="color: var(--shiki-color-text)">  prescribedObservers</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoWeightedObserver</span><span style="color: var(--shiki-color-text)">[];</span></span>
<span><span style="color: var(--shiki-color-text)">  prescribedNames</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">[];</span></span>
<span><span style="color: var(--shiki-color-text)">  startTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  endTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  distributionTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  distributions</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">D</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  arnsStats</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    totalReturnedNames</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    totalActiveNames</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    totalGracePeriodNames</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    totalReservedNames</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  };</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>28:T949,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getCurrentEpoch</span><span style="color: var(--shiki-color-text)">(): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoEpochData</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoEpochDistributionTotalsData</span><span style="color: var(--shiki-token-keyword)">&gt;&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Where AoEpochDistributionTotalsData is:</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoEpochDistributionTotalsData</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  totalEligibleGateways</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  totalEligibleRewards</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  totalEligibleObserverReward</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  totalEligibleGatewayReward</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>29:Tbdc,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getDistributions</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  epoch</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> EpochInput</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoEpochDistributionData </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">undefined</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Where AoEpochDistributionData is:</span></span>
<span><span style="color: var(--shiki-token-keyword)">type</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoEpochDistributionData</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoEpochDistributionTotalsData</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoEpochDistributed</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoEpochDistributed</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">extends</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoEpochDistributionTotalsData</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  distributedTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  totalDistributedRewards</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>2a:T118b,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getPrescribedObservers</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  epoch</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> EpochInput</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoWeightedObserver[] </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">undefined</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Where AoWeightedObserver is:</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoWeightedObserver</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  gatewayAddress</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  observerAddress</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  stake</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  startTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  stakeWeight</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  tenureWeight</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  gatewayPerformanceRatio</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  observerPerformanceRatio</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  compositeWeight</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  normalizedCompositeWeight</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>2b:Tb01,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getObservations</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  epoch</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> EpochInput</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoEpochObservationData </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">undefined</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Where AoEpochObservationData is:</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoEpochObservationData</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  failureSummaries</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Record</span><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)">[]&gt;;  </span><span style="color: var(--shiki-token-comment)">// Gateway -&gt; Failed gateways</span></span>
<span><span style="color: var(--shiki-color-text)">  reports</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Record</span><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">TransactionId</span><span style="color: var(--shiki-color-text)">&gt;;             </span><span style="color: var(--shiki-token-comment)">// Observer -&gt; Report tx</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>2c:T89b,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">saveObservations</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params: {</span></span>
<span><span style="color: var(--shiki-color-text)">    reportTxId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> TransactionId;      </span><span style="color: var(--shiki-token-comment)">// Transaction ID containing observation data</span></span>
<span><span style="color: var(--shiki-color-text)">    failedGateways: WalletAddress[]; </span><span style="color: var(--shiki-token-comment)">// List of failed gateway addresses</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  options</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    tags?</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>2d:Tfeb,<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoBuyRecordParams</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;                    </span><span style="color: var(--shiki-token-comment)">// Name to purchase</span></span>
<span><span style="color: var(--shiki-color-text)">  years</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;                  </span><span style="color: var(--shiki-token-comment)">// Lease duration in years (default: 1)</span></span>
<span><span style="color: var(--shiki-color-text)">  type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;lease&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;permabuy&#39;</span><span style="color: var(--shiki-color-text)">;      </span><span style="color: var(--shiki-token-comment)">// Purchase type</span></span>
<span><span style="color: var(--shiki-color-text)">  processId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;               </span><span style="color: var(--shiki-token-comment)">// ANT process ID</span></span>
<span><span style="color: var(--shiki-color-text)">  fundFrom</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;balance&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;stakes&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;any&#39;</span><span style="color: var(--shiki-color-text)">;  </span><span style="color: var(--shiki-token-comment)">// Source of funds</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">buyRecord</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params: AoBuyRecordParams</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  options</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> WriteOptions</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>2e:Tbdb,<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoExtendLeaseParams</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;                    </span><span style="color: var(--shiki-token-comment)">// Name to extend</span></span>
<span><span style="color: var(--shiki-color-text)">  years</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;                   </span><span style="color: var(--shiki-token-comment)">// Additional years</span></span>
<span><span style="color: var(--shiki-color-text)">  fundFrom</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;balance&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;stakes&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;any&#39;</span><span style="color: var(--shiki-color-text)">;  </span><span style="color: var(--shiki-token-comment)">// Source of funds</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">extendLease</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params: AoExtendLeaseParams</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  options</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> WriteOptions</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>2f:T175e,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getArNSRecord</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoArNSNameData </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">undefined</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Where AoArNSNameData is:</span></span>
<span><span style="color: var(--shiki-token-keyword)">type</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoArNSNameData</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoArNSPermabuyData</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoArNSLeaseData</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoArNSBaseNameData</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  processId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  startTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;lease&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;permabuy&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  undernameLimit</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  purchasePrice</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoArNSPermabuyData</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">extends</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoArNSBaseNameData</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;permabuy&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoArNSLeaseData</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">extends</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoArNSBaseNameData</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;lease&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  endTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>30:T843,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getArNSRecords</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> PaginationParams</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoArNSNameDataWithName</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PaginationResult</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoArNSNameDataWithName</span><span style="color: var(--shiki-token-keyword)">&gt;&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Where AoArNSNameDataWithName extends AoArNSNameData with:</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoArNSNameDataWithName</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">extends</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoArNSNameData</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>31:T1929,<span><span style="color: var(--shiki-token-comment)">// Overloads for different operations:</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Buy a name</span></span>
<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getTokenCost</span><span style="color: var(--shiki-color-text)">(params: {</span></span>
<span><span style="color: var(--shiki-color-text)">  intent</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Buy-Record&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Buy-Name&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  type: </span><span style="color: var(--shiki-token-string-expression)">&#39;permabuy&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;lease&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  years: number;</span></span>
<span><span style="color: var(--shiki-color-text)">  name: string;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">number</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Extend a lease</span></span>
<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getTokenCost</span><span style="color: var(--shiki-color-text)">(params: {</span></span>
<span><span style="color: var(--shiki-color-text)">  intent</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Extend-Lease&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  years: number;</span></span>
<span><span style="color: var(--shiki-color-text)">  name: string;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">number</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Increase undername limit</span></span>
<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getTokenCost</span><span style="color: var(--shiki-color-text)">(params: {</span></span>
<span><span style="color: var(--shiki-color-text)">  intent</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Increase-Undername-Limit&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  quantity: number;</span></span>
<span><span style="color: var(--shiki-color-text)">  name: string;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">number</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Upgrade to permabuy</span></span>
<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getTokenCost</span><span style="color: var(--shiki-color-text)">(params: {</span></span>
<span><span style="color: var(--shiki-color-text)">  intent</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Upgrade-Name&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  name: string;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">number</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Request primary name</span></span>
<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getTokenCost</span><span style="color: var(--shiki-color-text)">(params: {</span></span>
<span><span style="color: var(--shiki-color-text)">  intent</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Primary-Name-Request&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  name: string;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">number</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>32:Tc17,<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoIncreaseUndernameLimitParams</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;                    </span><span style="color: var(--shiki-token-comment)">// Name to increase limit for</span></span>
<span><span style="color: var(--shiki-color-text)">  increaseCount</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;           </span><span style="color: var(--shiki-token-comment)">// Number of additional undernames</span></span>
<span><span style="color: var(--shiki-color-text)">  fundFrom</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;balance&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;stakes&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;any&#39;</span><span style="color: var(--shiki-color-text)">;  </span><span style="color: var(--shiki-token-comment)">// Source of funds</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">increaseUndernameLimit</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params: AoIncreaseUndernameLimitParams</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  options</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> WriteOptions</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>33:Tb55,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getArNSReturnedName</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoReturnedName </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">undefined</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Where AoReturnedName is:</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoReturnedName</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  startTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Timestamp</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  endTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Timestamp</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  initiator</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  premiumMultiplier</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>34:T65e,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getArNSReturnedNames</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> PaginationParams</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoReturnedName</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PaginationResult</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoReturnedName</span><span style="color: var(--shiki-token-keyword)">&gt;&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Valid sortBy fields:</span></span>
<span><span style="color: var(--shiki-token-comment)">// - name</span></span>
<span><span style="color: var(--shiki-token-comment)">// - startTimestamp</span></span>
<span><span style="color: var(--shiki-token-comment)">// - endTimestamp</span></span>
<span><span style="color: var(--shiki-token-comment)">// - initiator</span></span>
<span><span style="color: var(--shiki-token-comment)">// - premiumMultiplier</span></span>
<span></span>35:T937,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getPrimaryName</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params: { address</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> WalletAddress } </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> { name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string }</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoPrimaryName</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Where AoPrimaryName is:</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoPrimaryName</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  address</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  startTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Timestamp</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>36:T538,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getPrimaryNames</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params: PaginationParams</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoPrimaryName</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PaginationResult</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoPrimaryName</span><span style="color: var(--shiki-token-keyword)">&gt;&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Valid sortBy fields:</span></span>
<span><span style="color: var(--shiki-token-comment)">// - name</span></span>
<span><span style="color: var(--shiki-token-comment)">// - address</span></span>
<span><span style="color: var(--shiki-token-comment)">// - startTimestamp</span></span>
<span></span>37:Tc1f,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getPrimaryNameRequest</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params: {</span></span>
<span><span style="color: var(--shiki-color-text)">    initiator</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> WalletAddress;</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoPrimaryNameRequest</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Where AoPrimaryNameRequest is:</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoPrimaryNameRequest</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  initiator</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  startTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Timestamp</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  status</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;pending&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;approved&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;rejected&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>38:T60b,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getPrimaryNameRequests</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> PaginationParams</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoPrimaryNameRequest</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PaginationResult</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoPrimaryNameRequest</span><span style="color: var(--shiki-token-keyword)">&gt;&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Valid sortBy fields:</span></span>
<span><span style="color: var(--shiki-token-comment)">// - name</span></span>
<span><span style="color: var(--shiki-token-comment)">// - initiator</span></span>
<span><span style="color: var(--shiki-token-comment)">// - startTimestamp</span></span>
<span><span style="color: var(--shiki-token-comment)">// - status</span></span>
<span></span>39:Ta5f,<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoArNSPurchaseParams</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;                    </span><span style="color: var(--shiki-token-comment)">// Name to request</span></span>
<span><span style="color: var(--shiki-color-text)">  fundFrom</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;balance&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;stakes&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;any&#39;</span><span style="color: var(--shiki-color-text)">;  </span><span style="color: var(--shiki-token-comment)">// Source of funds</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">requestPrimaryName</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  params: AoArNSPurchaseParams</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  options</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> WriteOptions</span></span>
<span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>3a:T764,<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ANTConfig</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  signer</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ArweaveSigner</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ArConnectSigner</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  processId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">; </span><span style="color: var(--shiki-token-comment)">// Required ANT process ID</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Initialize ANT</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ant</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ANT</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">(config: ANTConfig);</span></span>
<span></span>3b:T766,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getInfo</span><span style="color: var(--shiki-color-text)">(): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-color-text)">&lt;{</span></span>
<span><span style="color: var(--shiki-color-text)">  name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  ticker</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  description</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  keywords</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">[];</span></span>
<span><span style="color: var(--shiki-color-text)">  logo</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}&gt;;</span></span>
<span></span>3c:Tc15,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getState</span><span style="color: var(--shiki-color-text)">(): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-color-text)">&lt;{</span></span>
<span><span style="color: var(--shiki-color-text)">  name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  ticker</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  description</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  keywords</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">[];</span></span>
<span><span style="color: var(--shiki-color-text)">  logo</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  owner</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  controllers</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">[];</span></span>
<span><span style="color: var(--shiki-color-text)">  records</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Record</span><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">&gt;;</span></span>
<span><span style="color: var(--shiki-color-text)">}&gt;;</span></span>
<span></span>3d:T704,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">setRecord</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  undername</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string;  </span><span style="color: var(--shiki-token-comment)">// &#39;@&#39; for top level</span></span>
<span><span style="color: var(--shiki-color-text)">  transactionId: string;</span></span>
<span><span style="color: var(--shiki-color-text)">  ttlSeconds</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> number;</span></span>
<span><span style="color: var(--shiki-color-text)">  tags</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>3e:T58b,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">setName</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string;</span></span>
<span><span style="color: var(--shiki-color-text)">  tags</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>3f:T5dd,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">setLogo</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  logo</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string;  </span><span style="color: var(--shiki-token-comment)">// Arweave transaction ID</span></span>
<span><span style="color: var(--shiki-color-text)">  tags</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>40:T58f,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">setTicker</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  ticker</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string;</span></span>
<span><span style="color: var(--shiki-color-text)">  tags</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>41:T599,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">setDescription</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  description</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string;</span></span>
<span><span style="color: var(--shiki-color-text)">  tags</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>42:T595,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">setKeywords</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  keywords</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string[];</span></span>
<span><span style="color: var(--shiki-color-text)">  tags</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>43:T5f6,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">setController</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  controller</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string;  </span><span style="color: var(--shiki-token-comment)">// Wallet address to add as controller</span></span>
<span><span style="color: var(--shiki-color-text)">  tags</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>44:T5fc,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">removeController</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  controller</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string;  </span><span style="color: var(--shiki-token-comment)">// Wallet address to remove as controller</span></span>
<span><span style="color: var(--shiki-color-text)">  tags</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>45:T5ea,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">removeRecord</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  undername</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string;  </span><span style="color: var(--shiki-token-comment)">// &#39;@&#39; for top level</span></span>
<span><span style="color: var(--shiki-color-text)">  tags</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>46:T54e,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">removePrimaryName</span><span style="color: var(--shiki-color-text)">(options</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  tags?</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>47:T605,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">approvePrimaryNameRequest</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  initiator</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string;  </span><span style="color: var(--shiki-token-comment)">// Address that requested the primary name</span></span>
<span><span style="color: var(--shiki-color-text)">  tags</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>48:T548,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">releaseName</span><span style="color: var(--shiki-color-text)">(options</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  tags?</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>49:T5ec,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">reassignName</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  target</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string;  </span><span style="color: var(--shiki-token-comment)">// New owner&#39;s wallet address</span></span>
<span><span style="color: var(--shiki-color-text)">  tags</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>4a:T5e8,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">transfer</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  target</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string;  </span><span style="color: var(--shiki-token-comment)">// New owner&#39;s wallet address</span></span>
<span><span style="color: var(--shiki-color-text)">  tags</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>4b:T720,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">setBaseNameRecord</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  transactionId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string;  </span><span style="color: var(--shiki-token-comment)">// Arweave transaction ID to resolve to</span></span>
<span><span style="color: var(--shiki-color-text)">  ttlSeconds</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> number;    </span><span style="color: var(--shiki-token-comment)">// DNS TTL in seconds (default: 900)</span></span>
<span><span style="color: var(--shiki-color-text)">  tags</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>4c:T7de,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">setUndernameRecord</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  undername</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string;      </span><span style="color: var(--shiki-token-comment)">// Undername to set (e.g., &#39;blog&#39;)</span></span>
<span><span style="color: var(--shiki-color-text)">  transactionId: string;  </span><span style="color: var(--shiki-token-comment)">// Arweave transaction ID to resolve to</span></span>
<span><span style="color: var(--shiki-color-text)">  ttlSeconds</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> number;    </span><span style="color: var(--shiki-token-comment)">// DNS TTL in seconds (default: 900)</span></span>
<span><span style="color: var(--shiki-color-text)">  tags</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>4d:T5ed,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">removeUndernameRecord</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  undername</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string;  </span><span style="color: var(--shiki-token-comment)">// Undername to remove</span></span>
<span><span style="color: var(--shiki-color-text)">  tags</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ id</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>4e:T78e,<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ANTRegistryConfig</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  signer</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ArweaveSigner</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ArConnectSigner</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  processId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">; </span><span style="color: var(--shiki-token-comment)">// Required registry process ID</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Initialize ANTRegistry</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">registry</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ANTRegistry</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">(config: ANTRegistryConfig);</span></span>
<span></span>4f:T5f9,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">accessControlList</span><span style="color: var(--shiki-color-text)">(): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-function)">Array</span><span style="color: var(--shiki-color-text)">&lt;{</span></span>
<span><span style="color: var(--shiki-color-text)">  address</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  limit</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  used</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}&gt;</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>50:Tc64,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">register</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string;           </span><span style="color: var(--shiki-token-comment)">// Name to register</span></span>
<span><span style="color: var(--shiki-color-text)">  ticker</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> string;        </span><span style="color: var(--shiki-token-comment)">// Optional ticker symbol</span></span>
<span><span style="color: var(--shiki-color-text)">  description</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> string;   </span><span style="color: var(--shiki-token-comment)">// Optional description</span></span>
<span><span style="color: var(--shiki-color-text)">  keywords</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> string[];    </span><span style="color: var(--shiki-token-comment)">// Optional keywords</span></span>
<span><span style="color: var(--shiki-color-text)">  logo</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> string;         </span><span style="color: var(--shiki-token-comment)">// Optional Arweave transaction ID for logo</span></span>
<span><span style="color: var(--shiki-color-text)">  tags</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> Array</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> string; value: string }</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-color-text)">&lt;{</span></span>
<span><span style="color: var(--shiki-color-text)">  id</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;            </span><span style="color: var(--shiki-token-comment)">// Transaction ID</span></span>
<span><span style="color: var(--shiki-color-text)">  processId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;     </span><span style="color: var(--shiki-token-comment)">// New ANT process ID</span></span>
<span><span style="color: var(--shiki-color-text)">}&gt;;</span></span>
<span></span>51:T93c,<span><span style="color: var(--shiki-token-comment)">// Web authentication</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  signer</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ArConnectSigner</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">window</span><span style="color: var(--shiki-color-text)">.arweaveWallet)</span></span>
<span><span style="color: var(--shiki-color-text)">});</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Node.js authentication</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  signer</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ArweaveSigner</span><span style="color: var(--shiki-color-text)">(jwk)</span></span>
<span><span style="color: var(--shiki-color-text)">});</span></span>
<span></span>52:Tb1e,<span><span style="color: var(--shiki-token-keyword)">try</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">result</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-token-function)">.someMethod</span><span style="color: var(--shiki-color-text)">();</span></span>
<span><span style="color: var(--shiki-color-text)">} </span><span style="color: var(--shiki-token-keyword)">catch</span><span style="color: var(--shiki-color-text)"> (error) {</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">error</span><span style="color: var(--shiki-color-text)">.name </span><span style="color: var(--shiki-token-keyword)">===</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;AuthenticationError&#39;</span><span style="color: var(--shiki-color-text)">) {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Handle authentication errors</span></span>
<span><span style="color: var(--shiki-color-text)">  } </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">error</span><span style="color: var(--shiki-color-text)">.name </span><span style="color: var(--shiki-token-keyword)">===</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;ValidationError&#39;</span><span style="color: var(--shiki-color-text)">) {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// Handle validation errors</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// ... other error types</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>53:Tb70,<span><span style="color: var(--shiki-token-comment)">// Core types used throughout the SDK</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">GQLTag</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  value</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">PaginationOptions</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  limit</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  cursor</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  sortBy</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  sortOrder</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;asc&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;desc&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// ... other common types</span></span>
<span></span>54:Tdba,<span><span style="color: var(--shiki-token-comment)">// Example of complete gateway lifecycle</span></span>
<span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">manageGateway</span><span style="color: var(--shiki-color-text)">() {</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// Join network</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">joinResult</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-token-function)">.joinNetwork</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">    qty</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">10000</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    label</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;My Gateway&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// ... other required params</span></span>
<span><span style="color: var(--shiki-color-text)">  });</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// Update settings</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-token-function)">.updateGatewaySettings</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// ... settings</span></span>
<span><span style="color: var(--shiki-color-text)">  });</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// Leave network</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-token-function)">.leaveNetwork</span><span style="color: var(--shiki-color-text)">();</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>55:T5f4,<span><span style="color: var(--shiki-token-comment)">/**</span></span>
<span><span style="color: var(--shiki-token-comment)"> * Important: All write operations (methods requiring authentication) accept an optional </span></span>
<span><span style="color: var(--shiki-token-comment)"> * WriteOptions parameter with the following structure:</span></span>
<span><span style="color: var(--shiki-token-comment)"> */</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WriteOptions</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  tags</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Array</span><span style="color: var(--shiki-color-text)">&lt;{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">; value</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)"> }&gt;;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>56:Tee4,<span><span style="color: var(--shiki-color-text)">async </span><span style="color: var(--shiki-token-function)">getBalances</span><span style="color: var(--shiki-color-text)">(params</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> PaginationParams</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoBalanceWithAddress</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">): </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">PaginationResult</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">AoBalanceWithAddress</span><span style="color: var(--shiki-token-keyword)">&gt;&gt;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Where AoBalanceWithAddress is:</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoBalanceWithAddress</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  address</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)">;  </span><span style="color: var(--shiki-token-comment)">// Can use &quot;address&quot; as sortBy</span></span>
<span><span style="color: var(--shiki-color-text)">  balance</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;         </span><span style="color: var(--shiki-token-comment)">// Can use &quot;balance&quot; as sortBy</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Example usage:</span></span>
<span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-token-function)">.getBalances</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  limit</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">100</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  sortBy</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;balance&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-comment)">// Valid because it&#39;s a field in AoBalanceWithAddress</span></span>
<span><span style="color: var(--shiki-color-text)">  sortOrder</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;desc&quot;</span></span>
<span><span style="color: var(--shiki-color-text)">});</span></span>
<span></span>57:T23be,<span><span style="color: var(--shiki-token-comment)">// Basic Types</span></span>
<span><span style="color: var(--shiki-token-keyword)">type</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">BlockHeight</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-token-keyword)">type</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Timestamp</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-token-keyword)">type</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-token-keyword)">type</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">TransactionId</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-token-keyword)">type</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ProcessId</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Pagination Types</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">PaginationParams</span><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-function)">T</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Record</span><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">never</span><span style="color: var(--shiki-color-text)">&gt;&gt; {</span></span>
<span><span style="color: var(--shiki-color-text)">  cursor</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  limit</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;  </span><span style="color: var(--shiki-token-comment)">// Maximum: 1000</span></span>
<span><span style="color: var(--shiki-color-text)">  sortBy</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  sortOrder</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;asc&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;desc&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">PaginationResult</span><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-function)">T</span><span style="color: var(--shiki-color-text)">&gt; {</span></span>
<span><span style="color: var(--shiki-color-text)">  items</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">T</span><span style="color: var(--shiki-color-text)">[];</span></span>
<span><span style="color: var(--shiki-color-text)">  nextCursor</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  limit</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  totalItems</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  sortBy</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  sortOrder</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;asc&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;desc&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  hasMore</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">boolean</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Write Operation Options</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WriteOptions</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  tags</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Array</span><span style="color: var(--shiki-color-text)">&lt;{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">; value</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)"> }&gt;;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// ... rest of the types ...</span></span>
<span></span>58:T2231,<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoGateway</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  settings</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    allowDelegatedStaking</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">boolean</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;allowlist&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    delegateRewardShareRatio</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    allowedDelegates</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)">[];</span></span>
<span><span style="color: var(--shiki-color-text)">    minDelegatedStake</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    autoStake</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">boolean</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    label</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    note</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    properties</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    fqdn</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    port</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    protocol</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;https&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  };</span></span>
<span><span style="color: var(--shiki-color-text)">  stats</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    passedConsecutiveEpochs</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    failedConsecutiveEpochs</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    totalEpochCount</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    passedEpochCount</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    failedEpochCount</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    observedEpochCount</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    prescribedEpochCount</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  };</span></span>
<span><span style="color: var(--shiki-color-text)">  totalDelegatedStake</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  startTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  endTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  observerAddress</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  operatorStake</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  status</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;joined&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;leaving&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>59:T1344,<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ArNSRecord</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  processId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  startTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;lease&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;permabuy&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  undernameLimit</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  purchasePrice</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  endTimestamp</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;  </span><span style="color: var(--shiki-token-comment)">// Only for leased records</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ArNSAuction</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  id</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  startTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  endTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  highestBid</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  highestBidder</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>5a:T12f8,<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">EpochData</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  epochIndex</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  startHeight</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  startTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  endTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  distributionTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  observations</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    failureSummaries</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Record</span><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">[]&gt;;</span></span>
<span><span style="color: var(--shiki-color-text)">    reports</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Record</span><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">&gt;;</span></span>
<span><span style="color: var(--shiki-color-text)">  };</span></span>
<span><span style="color: var(--shiki-color-text)">  distributions</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    totalEligibleGateways</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    totalEligibleRewards</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    totalEligibleObserverReward</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    totalEligibleGatewayReward</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  };</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>5b:Tb69,<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">VaultData</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  id</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  owner</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  balance</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  start</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  end</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  gateway</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;withdrawal&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;operator&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;delegate&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>5c:T1540,<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">GatewayRegistrySettings</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  delegates</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    minStake</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    withdrawLengthMs</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  };</span></span>
<span><span style="color: var(--shiki-color-text)">  observers</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    tenureWeightDurationMs</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    maxTenureWeight</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  };</span></span>
<span><span style="color: var(--shiki-color-text)">  operators</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    minStake</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    withdrawLengthMs</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    leaveLengthMs</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    failedEpochCountMax</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    failedGatewaySlashRate</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  };</span></span>
<span><span style="color: var(--shiki-color-text)">  redelegations</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    minRedelegationPenaltyRate</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    maxRedelegationPenaltyRate</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    minRedelegationAmount</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    redelegationFeeResetIntervalMs</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  };</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>5d:Tace,// Delegation Types
interface AoDelegationBase {
  type: 'stake' | 'vault';
  gatewayAddress: WalletAddress;
  delegationId: string;
}

interface AoVaultDelegation extends AoDelegationBase {
  type: 'vault';
  vaultId: TransactionId;
  balance: number;
  startTimestamp: Timestamp;
  endTimestamp: Timestamp;
}

interface AoStakeDelegation extends AoDelegationBase {
  type: 'stake';
  startTimestamp: Timestamp;
  balance: number;
}

type AoDelegation = AoStakeDelegation | AoVaultDelegation;

// Gateway Delegate Types
interface AoGatewayDelegate {
  delegatedStake: number;
  startTimestamp: Timestamp;
}

interface AoGatewayDelegateWithAddress extends AoGatewayDelegate {
  address: WalletAddress;
}

interface AoAllDelegates extends AoGatewayDelegateWithAddress {
  gatewayAddress: WalletAddress;
  vaultedStake: number;
  cursorId: string;
}

// Cost and Fee Types
interface CostDiscount {
  name: string;
  discountTotal: number;
  multiplier: number;
}

interface CostDetailsResult {
  tokenCost: number;
  discounts: CostDiscount[];
  returnedNameDetails?: {
    name: string;
    startTimestamp: Timestamp;
    endTimestamp: Timestamp;
    initiator: string;
    premiumMultiplier: number;
    basePrice: number;
  };
  fundingPlan?: {
    address: WalletAddress;
    balance: number;
    stakes: Record<WalletAddress, {
      vaults: Record<string, number>[];
      delegatedStake: number;
    }>;
    shortfall: number;
  };
}

// Token Supply Types
interface AoTokenSupplyData {
  total: number;
  circulating: number;
  locked: number;
  withdrawn: number;
  delegated: number;
  staked: number;
  protocolBalance: number;
}

// Demand Factor Types
interface DemandFactorSettings {
  periodZeroStartTimestamp: number;
  movingAvgPeriodCount: number;
  periodLengthMs: number;
  demandFactorBaseValue: number;
  demandFactorMin: number;
  demandFactorUpAdjustmentRate: number;
  demandFactorDownAdjustmentRate: number;
  maxPeriodsAtMinDemandFactor: number;
  criteria: string;
}

// Gateway Service Types
interface AoGatewayService {
  fqdn: string;
  path: string;
  protocol: 'https';
  port: number;
}

interface AoGatewayServices {
  bundlers: AoGatewayService[];
}

// Gateway Weight Types
interface AoGatewayWeights {
  stakeWeight: number;
  tenureWeight: number;
  gatewayPerformanceRatio: number;
  observerPerformanceRatio: number;
  compositeWeight: number;
  normalizedCompositeWeight: number;
}

// Observer Types
interface AoWeightedObserver {
  gatewayAddress: WalletAddress;
  observerAddress: WalletAddress;
  stake: number;
  startTimestamp: number;
  stakeWeight: number;
  tenureWeight: number;
  gatewayPerformanceRatio: number;
  observerPerformanceRatio: number;
  compositeWeight: number;
  normalizedCompositeWeight: number;
}
5e:T765a,<span><span style="color: var(--shiki-token-comment)">// Delegation Types</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoDelegationBase</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;stake&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;vault&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  gatewayAddress</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  delegationId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoVaultDelegation</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">extends</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoDelegationBase</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;vault&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  vaultId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">TransactionId</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  balance</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  startTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Timestamp</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  endTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Timestamp</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoStakeDelegation</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">extends</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoDelegationBase</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;stake&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  startTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Timestamp</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  balance</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">type</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoDelegation</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoStakeDelegation</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoVaultDelegation</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Gateway Delegate Types</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoGatewayDelegate</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  delegatedStake</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  startTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Timestamp</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoGatewayDelegateWithAddress</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">extends</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoGatewayDelegate</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  address</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoAllDelegates</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">extends</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoGatewayDelegateWithAddress</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  gatewayAddress</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  vaultedStake</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  cursorId</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Cost and Fee Types</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">CostDiscount</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  discountTotal</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  multiplier</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">CostDetailsResult</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  tokenCost</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  discounts</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">CostDiscount</span><span style="color: var(--shiki-color-text)">[];</span></span>
<span><span style="color: var(--shiki-color-text)">  returnedNameDetails</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    startTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Timestamp</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    endTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Timestamp</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    initiator</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    premiumMultiplier</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    basePrice</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  };</span></span>
<span><span style="color: var(--shiki-color-text)">  fundingPlan</span><span style="color: var(--shiki-token-keyword)">?:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    address</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    balance</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    stakes</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Record</span><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">      vaults</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Record</span><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">&gt;[];</span></span>
<span><span style="color: var(--shiki-color-text)">      delegatedStake</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">    }&gt;;</span></span>
<span><span style="color: var(--shiki-color-text)">    shortfall</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  };</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Token Supply Types</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoTokenSupplyData</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  total</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  circulating</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  locked</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  withdrawn</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  delegated</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  staked</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  protocolBalance</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Demand Factor Types</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">DemandFactorSettings</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  periodZeroStartTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  movingAvgPeriodCount</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  periodLengthMs</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  demandFactorBaseValue</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  demandFactorMin</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  demandFactorUpAdjustmentRate</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  demandFactorDownAdjustmentRate</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  maxPeriodsAtMinDemandFactor</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  criteria</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Gateway Service Types</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoGatewayService</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  fqdn</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  path</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  protocol</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;https&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  port</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoGatewayServices</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  bundlers</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoGatewayService</span><span style="color: var(--shiki-color-text)">[];</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Gateway Weight Types</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoGatewayWeights</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  stakeWeight</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  tenureWeight</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  gatewayPerformanceRatio</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  observerPerformanceRatio</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  compositeWeight</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  normalizedCompositeWeight</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Observer Types</span></span>
<span><span style="color: var(--shiki-token-keyword)">interface</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">AoWeightedObserver</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  gatewayAddress</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  observerAddress</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">WalletAddress</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  stake</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  startTimestamp</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  stakeWeight</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  tenureWeight</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  gatewayPerformanceRatio</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  observerPerformanceRatio</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  compositeWeight</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">  normalizedCompositeWeight</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">number</span><span style="color: var(--shiki-color-text)">;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>0:{"P":null,"b":"tPF-TiVx-lHPlte57eG2O","p":"/docs-v2","c":["","ai","sdk"],"i":false,"f":[[["",{"children":["ai",{"children":["sdk",{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$2","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/docs-v2/_next/static/css/2402520d5b921a75.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],"$L3"]}],{"children":["ai",["$","$2","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","ai","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}],{"children":["sdk",["$","$2","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","ai","children","sdk","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}],{"children":["__PAGE__",["$","$2","c",{"children":[["$","article",null,{"className":"flex h-full flex-col pb-10 pt-16","children":[["$","div",null,{"className":"flex-auto prose dark:prose-invert [html_:where(&>*)]:mx-auto [html_:where(&>*)]:max-w-2xl [html_:where(&>*)]:lg:mx-[calc(50%-min(50%,theme(maxWidth.lg)))] [html_:where(&>*)]:lg:max-w-3xl","children":["\n","\n","\n",["$","div",null,{"className":"absolute inset-0 -z-10 mx-0 max-w-none overflow-hidden","children":["$","div",null,{"className":"absolute left-1/2 top-0 ml-[-38rem] h-[25rem] w-[81.25rem] dark:[mask-image:linear-gradient(white,transparent)]","children":[["$","div",null,{"className":"absolute inset-0 bg-gradient-to-r from-[#36b49f] to-[#DF9BE8] opacity-40 [mask-image:radial-gradient(farthest-side_at_top,white,transparent)] dark:from-[#DF9BE8]/30 dark:to-[#DF9BE8]/30 dark:opacity-100","children":["$","svg",null,{"aria-hidden":"true","className":"absolute inset-x-0 inset-y-[-50%] h-[200%] w-full skew-y-[-18deg] fill-black/40 stroke-black/50 mix-blend-overlay dark:fill-white/2.5 dark:stroke-white/5","children":[["$","defs",null,{"children":["$","pattern",null,{"id":":S1:","width":72,"height":56,"patternUnits":"userSpaceOnUse","x":-12,"y":4,"children":["$","path",null,{"d":"M.5 56V.5H72","fill":"none"}]}]}],["$","rect",null,{"width":"100%","height":"100%","strokeWidth":0,"fill":"url(#:S1:)"}],["$","svg",null,{"x":-12,"y":4,"className":"overflow-visible","children":[["$","rect","4-3",{"strokeWidth":"0","width":73,"height":57,"x":288,"y":168}],["$","rect","2-1",{"strokeWidth":"0","width":73,"height":57,"x":144,"y":56}],["$","rect","7-3",{"strokeWidth":"0","width":73,"height":57,"x":504,"y":168}],["$","rect","10-6",{"strokeWidth":"0","width":73,"height":57,"x":720,"y":336}]]}]]}]}],["$","svg",null,{"viewBox":"0 0 1113 440","aria-hidden":"true","className":"absolute left-1/2 top-0 ml-[-19rem] w-[69.5625rem] fill-white blur-[26px] dark:hidden","children":["$","path",null,{"d":"M.016 439.5s-9.5-300 434-300S882.516 20 882.516 20V0h230.004v439.5H.016Z"}]}]]}]}],"\n",["$","h1",null,{"children":"AR.IO SDK Reference"}],"\n",["$","p",null,{"children":"This document provides a comprehensive reference of the AR.IO SDK, structured for optimal AI understanding and assistance."}],"\n",["$","$L6",null,{"level":2,"id":"sdk-classes-overview","children":"SDK Classes Overview"}],"\n",["$","p",null,{"children":"The AR.IO SDK consists of three main classes:"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"ARIO"}]," - Core functionality for interacting with the AR.IO network"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"ANT"}]," - Management of Arweave Name Tokens"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"ANTRegistry"}]," - Registration and management of ANTs"]}],"\n"]}],"\n",["$","$L6",null,{"level":2,"id":"important-constants","children":"Important Constants"}],"\n",["$","$L7",null,{"language":"typescript","code":"// ARIO mainnet process ID\nconst ARIO_MAINNET_PROCESS_ID = 'qNvAoz0TgcH7DMg8BCVn8jF32QH5L6T29VjHxhHqqGE';\nconst DEFAULT_TTL_SECONDS = 900;\nconst MAX_PAGINATION_LIMIT = 1000;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$9"}]}],"\n",["$","h3",null,{"children":"Usage Notes"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"All paginated methods accept a maximum of 1000 items per request"}],"\n",["$","li",null,{"children":"When initializing ARIO on mainnet, use the mainnet process ID:"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"const ario = ARIO.init({\n  signer: new ArweaveSigner(jwk),\n  process: new AOProcess({\n    processId: 'qNvAoz0TgcH7DMg8BCVn8jF32QH5L6T29VjHxhHqqGE'\n  })\n});\n","children":["$","$L8",null,{"className":"language-typescript","children":"$a"}]}],"\n",["$","$L6",null,{"level":2,"id":"class-ario","children":"Class: ARIO"}],"\n",["$","h3",null,{"children":"Configuration"}],"\n",["$","$L7",null,{"language":"typescript","code":"interface ARIOConfig {\n  process?: AOProcess;        // Pre-configured AOProcess instance\n  processId?: string;         // ID of the AO process (defaults to mainnet)\n  signer?: ContractSigner;    // ArweaveSigner or ArConnectSigner\n}\n\n// Initialize ARIO\nconst ario = ARIO.init(config?: ARIOConfig);\n","children":["$","$L8",null,{"className":"language-typescript","children":"$b"}]}],"\n",["$","h3",null,{"children":"Initialization"}],"\n",["$","p",null,{"children":"The ARIO class can be initialized in three ways:"}],"\n",["$","$L7",null,{"language":"typescript","code":"// Read-only client (no arguments)\nstatic init(): AoARIORead;\n\n// Authenticated client (with signer)\nstatic init(config: ARIOConfigWithSigner): AoARIOWrite;\n\n// Read-only client (with config)\nstatic init(config: ARIOConfigNoSigner): AoARIORead;\n","children":["$","$L8",null,{"className":"language-typescript","children":"<span><span style=\"color: var(--shiki-token-comment)\">// Read-only client (no arguments)</span></span>\n<span><span style=\"color: var(--shiki-color-text)\">static </span><span style=\"color: var(--shiki-token-function)\">init</span><span style=\"color: var(--shiki-color-text)\">(): AoARIORead;</span></span>\n<span></span>\n<span><span style=\"color: var(--shiki-token-comment)\">// Authenticated client (with signer)</span></span>\n<span><span style=\"color: var(--shiki-color-text)\">static </span><span style=\"color: var(--shiki-token-function)\">init</span><span style=\"color: var(--shiki-color-text)\">(config: ARIOConfigWithSigner): AoARIOWrite;</span></span>\n<span></span>\n<span><span style=\"color: var(--shiki-token-comment)\">// Read-only client (with config)</span></span>\n<span><span style=\"color: var(--shiki-color-text)\">static </span><span style=\"color: var(--shiki-token-function)\">init</span><span style=\"color: var(--shiki-color-text)\">(config: ARIOConfigNoSigner): AoARIORead;</span></span>\n<span></span>"}]}],"\n",["$","h3",null,{"children":"Configuration Types"}],"\n",["$","$L7",null,{"language":"typescript","code":"type ARIOConfigNoSigner = {\n  process?: AOProcess;\n  processId?: string;\n  arweave?: Arweave;\n};\n\ntype ARIOConfigWithSigner = {\n  signer: ArweaveSigner | ArConnectSigner;\n  process?: AOProcess;\n  processId?: string;\n  arweave?: Arweave;\n};\n","children":["$","$L8",null,{"className":"language-typescript","children":"$c"}]}],"\n",["$","h3",null,{"children":"Initialization Examples"}],"\n",["$","$L7",null,{"language":"typescript","code":"// Read-only client (no authentication)\nconst ario = ARIO.init();\n\n// NodeJS authenticated client\nconst ario = ARIO.init({\n  signer: new ArweaveSigner(jwk)\n});\n\n// Web authenticated client\nconst ario = ARIO.init({\n  signer: new ArConnectSigner(window.arweaveWallet)\n});\n\n// Custom AO process configuration\nconst ario = ARIO.init({\n  process: new AOProcess({\n    processId: ARIO_MAINNET_PROCESS_ID,\n    ao: connect({\n      MU_URL: 'https://mu.arweave.net',      // customizable\n      CU_URL: 'https://cu.arweave.net',      // customizable\n      GRAPHQL_URL: 'https://arweave.net/graphql', // customizable\n      GATEWAY_URL: 'https://arweave.net',    // customizable\n    })\n  })\n});\n\n// Custom process ID (for non-mainnet)\nconst ario = ARIO.init({\n  processId: 'custom_process_id'  // Use specific AO process\n});\n","children":["$","$L8",null,{"className":"language-typescript","children":"$d"}]}],"\n",["$","h3",null,{"children":"Configuration Parameters"}],"\n",["$","table",null,{"children":[["$","thead",null,{"children":["$","tr",null,{"children":[["$","th",null,{"children":"Parameter"}],["$","th",null,{"children":"Type"}],["$","th",null,{"children":"Description"}],["$","th",null,{"children":"Optional"}]]}]}],["$","tbody",null,{"children":[["$","tr",null,{"children":[["$","td",null,{"children":"process"}],["$","td",null,{"children":"AOProcess"}],["$","td",null,{"children":"Pre-configured AOProcess instance"}],["$","td",null,{"children":"Yes"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"processId"}],["$","td",null,{"children":"string"}],["$","td",null,{"children":"ID of the AO process"}],["$","td",null,{"children":"Yes"}]]}],["$","tr",null,{"children":[["$","td",null,{"children":"signer"}],["$","td",null,{"children":"ContractSigner"}],["$","td",null,{"children":"Signer for authenticated operations"}],["$","td",null,{"children":"Yes"}]]}]]}]]}],"\n",["$","h3",null,{"children":"Authentication Notes"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"\"Authentication: Not required\" - Method is available on read-only clients (no signer needed during init)"}],"\n",["$","li",null,{"children":"\"Authentication: Required\" - Method is only available when initialized with a signer"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"// Read-only client - can only call \"Authentication: Not required\" methods\nconst readOnlyClient = ARIO.init();\n\n// Authenticated client - can call all methods\nconst authenticatedClient = ARIO.init({\n  signer: new ArweaveSigner(jwk)\n});\n","children":["$","$L8",null,{"className":"language-typescript","children":"$e"}]}],"\n",["$","h3",null,{"children":"Methods"}],"\n",["$","h4",null,{"children":"General Operations"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getInfo"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Retrieve basic information about the ARIO contract"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Returns: Contract information including name, ticker, and settings"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getInfo(): Promise<{\n  Name: string;           // Contract name\n  Ticker: string;         // Token ticker symbol\n  Logo: string;          // Logo transaction ID\n  Denomination: number;   // Token denomination\n  Handlers: string[];    // List of supported handlers\n  LastCreatedEpochIndex: number;      // Index of last created epoch\n  LastDistributedEpochIndex: number;  // Index of last distributed epoch\n}>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$f"}]}],"\n",["$","ol",null,{"start":"2","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getTokenSupply"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get total token supply information"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Returns: Detailed token supply metrics"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getTokenSupply(): Promise<{\n  total: number;          // Total token supply\n  circulating: number;    // Tokens in circulation\n  locked: number;         // Tokens locked in vaults\n  withdrawn: number;      // Tokens in withdrawal\n  delegated: number;      // Tokens delegated to gateways\n  staked: number;        // Tokens staked by operators\n  protocolBalance: number; // Tokens held by protocol\n}>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$10"}]}],"\n",["$","ol",null,{"start":"3","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getBalance"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get token balance for a specific wallet"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Parameters: Wallet address"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getBalance({ \n  address: WalletAddress \n}): Promise<number>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"<span><span style=\"color: var(--shiki-color-text)\">async </span><span style=\"color: var(--shiki-token-function)\">getBalance</span><span style=\"color: var(--shiki-color-text)\">({ </span></span>\n<span><span style=\"color: var(--shiki-color-text)\">  address</span><span style=\"color: var(--shiki-token-keyword)\">:</span><span style=\"color: var(--shiki-color-text)\"> WalletAddress </span></span>\n<span><span style=\"color: var(--shiki-color-text)\">}): </span><span style=\"color: var(--shiki-token-constant)\">Promise</span><span style=\"color: var(--shiki-token-keyword)\">&lt;</span><span style=\"color: var(--shiki-color-text)\">number</span><span style=\"color: var(--shiki-token-keyword)\">&gt;</span><span style=\"color: var(--shiki-color-text)\">;</span></span>\n<span></span>"}]}],"\n",["$","ol",null,{"start":"4","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"transfer"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Transfer ARIO tokens to another wallet"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Transfer details and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async transfer(\n  {\n    target: string;         // Recipient wallet address\n    qty: number | mARIOToken; // Amount to transfer (in base units or mARIO)\n  },\n  options?: {\n    tags?: Array<{ name: string; value: string }>;\n  }\n): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$11"}]}],"\n",["$","ol",null,{"start":"5","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getBalances"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get paginated list of wallet balances"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Parameters: Optional pagination parameters"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getBalances(params?: PaginationParams<AoBalanceWithAddress>): Promise<PaginationResult<AoBalanceWithAddress>>;\n\n// Where AoBalanceWithAddress is:\ninterface AoBalanceWithAddress {\n  address: WalletAddress;\n  balance: number;\n}\n\n// And PaginationParams/Result are:\ninterface PaginationParams<T> {\n  cursor?: string;\n  limit?: number;  // Maximum: 1000\n  sortBy?: string;\n  sortOrder?: 'asc' | 'desc';\n}\n\ninterface PaginationResult<T> {\n  items: T[];\n  nextCursor?: string;\n  limit: number;\n  totalItems: number;\n  sortBy?: string;\n  sortOrder: 'asc' | 'desc';\n  hasMore: boolean;\n}\n","children":["$","$L8",null,{"className":"language-typescript","children":"$12"}]}],"\n",["$","h4",null,{"children":"Gateway Operations"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getGateway"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get information about a specific gateway"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Parameters: Gateway address"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getGateway({\n  address: WalletAddress\n}): Promise<AoGateway | undefined>;\n\n// Where AoGateway is:\ninterface AoGateway {\n  settings: {\n    allowDelegatedStaking: boolean | 'allowlist';\n    delegateRewardShareRatio: number;\n    allowedDelegates: WalletAddress[];\n    minDelegatedStake: number;\n    autoStake: boolean;\n    label: string;\n    note: string;\n    properties: string;\n    fqdn: string;\n    port: number;\n    protocol: 'https';\n  };\n  stats: {\n    passedConsecutiveEpochs: number;\n    failedConsecutiveEpochs: number;\n    totalEpochCount: number;\n    passedEpochCount: number;\n    failedEpochCount: number;\n    observedEpochCount: number;\n    prescribedEpochCount: number;\n  };\n  totalDelegatedStake: number;\n  startTimestamp: Timestamp;\n  endTimestamp: Timestamp;\n  observerAddress: WalletAddress;\n  operatorStake: number;\n  status: 'joined' | 'leaving';\n}\n","children":["$","$L8",null,{"className":"language-typescript","children":"$13"}]}],"\n",["$","ol",null,{"start":"2","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getGateways"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: List all gateways in the network"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Parameters: Optional pagination parameters"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getGateways(\n  params?: PaginationParams<AoGatewayWithAddress>\n): Promise<PaginationResult<AoGatewayWithAddress>>;\n\n// Where AoGatewayWithAddress extends AoGateway with:\ninterface AoGatewayWithAddress extends AoGateway {\n  gatewayAddress: WalletAddress;\n}\n\n// Valid sortBy fields from AoGatewayWithAddress:\n// - gatewayAddress\n// - startTimestamp\n// - endTimestamp\n// - totalDelegatedStake\n// - operatorStake\n// - status\n// - \"settings.label\"\n// - \"stats.passedConsecutiveEpochs\"\n// etc.\n","children":["$","$L8",null,{"className":"language-typescript","children":"$14"}]}],"\n",["$","ol",null,{"start":"3","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"joinNetwork"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Join a gateway to the AR.IO network"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Requirements: Minimum 10,000 ARIO tokens for operator stake"}],"\n",["$","li",null,{"children":"Parameters: Gateway configuration and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"$15","children":["$","$L8",null,{"className":"language-typescript","children":"$16"}]}],"\n",["$","ol",null,{"start":"4","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"leaveNetwork"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Remove a gateway from the AR.IO network"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Note: Operator stake is vaulted for 90 days by default. Can be withdrawn instantly for a fee."}],"\n",["$","li",null,{"children":"Parameters: Optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async leaveNetwork(\n  options?: {\n    tags?: Array<{ name: string; value: string }>;\n  }\n): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$17"}]}],"\n",["$","ol",null,{"start":"5","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"updateGatewaySettings"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Update gateway configuration"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Updated settings"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async updateGatewaySettings({\n  label?: string;\n  fqdn?: string;\n  port?: number;\n  protocol?: 'http' | 'https';\n  properties?: string;\n  observerWallet?: string;\n  autoStake?: boolean;\n  allowDelegatedStaking?: boolean;\n  delegateRewardShareRatio?: number;\n  minDelegatedStake?: number;\n  note?: string;\n  tags?: Array<{ name: string; value: string }>;\n}): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$18"}]}],"\n",["$","ol",null,{"start":"6","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"increaseOperatorStake"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Increase gateway operator stake"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Stake amount and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async increaseOperatorStake(\n  params: {\n    increaseQty: number | mARIOToken;  // Amount to increase stake by\n  },\n  options?: {\n    tags?: Array<{ name: string; value: string }>;\n  }\n): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$19"}]}],"\n",["$","ol",null,{"start":"7","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"decreaseOperatorStake"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Decrease gateway operator stake"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Stake amount, instant withdrawal option, and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async decreaseOperatorStake(\n  params: {\n    decreaseQty: number | mARIOToken;  // Amount to decrease stake by\n    instant?: boolean;                 // If true, withdraw instantly with fee\n  },\n  options?: {\n    tags?: Array<{ name: string; value: string }>;\n  }\n): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$1a"}]}],"\n",["$","ol",null,{"start":"8","children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"increaseDelegateStake"}]," (alias for delegateStake)"]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Delegate stake to a gateway"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Target gateway, stake amount, and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async increaseDelegateStake(\n  params: {\n    target: string;                  // Target gateway address\n    stakeQty: number | mARIOToken;   // Amount to delegate\n  },\n  options?: {\n    tags?: Array<{ name: string; value: string }>;\n  }\n): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$1b"}]}],"\n",["$","ol",null,{"start":"9","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"decreaseDelegateStake"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Decrease delegated stake from a gateway"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Target gateway, amount, instant withdrawal option, and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async decreaseDelegateStake(\n  params: {\n    target: string;                  // Target gateway address\n    decreaseQty: number | mARIOToken; // Amount to decrease\n    instant?: boolean;               // If true, withdraw instantly with fee\n  },\n  options?: {\n    tags?: Array<{ name: string; value: string }>;\n  }\n): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$1c"}]}],"\n",["$","ol",null,{"start":"10","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"instantWithdrawal"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Instantly withdraw stake with a fee"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Gateway address (optional), vault ID, and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async instantWithdrawal(\n  params: {\n    gatewayAddress?: string;      // Optional gateway address\n    vaultId: string;              // ID of the vault to withdraw from\n  },\n  options?: {\n    tags?: Array<{ name: string; value: string }>;\n  }\n): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$1d"}]}],"\n",["$","ol",null,{"start":"11","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"cancelWithdrawal"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Cancel a pending withdrawal"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Gateway address (optional), vault ID, and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async cancelWithdrawal(\n  params: {\n    gatewayAddress?: WalletAddress; // Optional gateway address\n    vaultId: string;                // ID of the vault withdrawal to cancel\n  },\n  options?: {\n    tags?: Array<{ name: string; value: string }>;\n  }\n): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$1e"}]}],"\n",["$","ol",null,{"start":"12","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"redelegateStake"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Redelegate stake from one gateway to another gateway"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Source/target gateways, amount, optional vault ID, and tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async redelegateStake(\n  params: {\n    target: string;                  // Target gateway address\n    source: string;                  // Source gateway address\n    stakeQty: number | mARIOToken;   // Amount to redelegate\n    vaultId?: string;                // Optional vault ID to redelegate from\n  },\n  options?: {\n    tags?: Array<{ name: string; value: string }>;\n  }\n): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$1f"}]}],"\n",["$","ol",null,{"start":"13","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getRedelegationFee"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get current redelegation fee percentage for address"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Parameters: Gateway address"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getRedelegationFee(\n  params: {\n    address: WalletAddress;  // Gateway address to check fee for\n  }\n): Promise<{\n  redelegationFeeRate: number;     // Fee percentage for redelegation\n  feeResetTimestamp: number;       // When fee resets to zero\n}>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$20"}]}],"\n",["$","ol",null,{"start":"14","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getDelegations"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get paginated list of delegations for an address"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Parameters: Address and pagination options"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getDelegations(\n  params: {\n    address: WalletAddress;\n  } & PaginationParams<AoDelegation>\n): Promise<PaginationResult<AoDelegation>>;\n\n// Where AoDelegation is:\ntype AoDelegation = AoStakeDelegation | AoVaultDelegation;\n\ninterface AoStakeDelegation {\n  type: 'stake';\n  gatewayAddress: WalletAddress;\n  delegationId: string;\n  startTimestamp: Timestamp;\n  balance: number;\n}\n\ninterface AoVaultDelegation {\n  type: 'vault';\n  gatewayAddress: WalletAddress;\n  delegationId: string;\n  vaultId: TransactionId;\n  balance: number;\n  startTimestamp: Timestamp;\n  endTimestamp: Timestamp;\n}\n","children":["$","$L8",null,{"className":"language-typescript","children":"$21"}]}],"\n",["$","ol",null,{"start":"15","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getAllowedDelegates"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get paginated list of addresses allowed to delegate to a gateway"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Parameters: Gateway address and pagination options"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getAllowedDelegates(\n  params: {\n    address: WalletAddress;\n  } & PaginationParams<WalletAddress>\n): Promise<PaginationResult<WalletAddress>>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$22"}]}],"\n",["$","ol",null,{"start":"16","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getGatewayDelegates"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get paginated list of delegates for a gateway"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Parameters: Gateway address and pagination options"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getGatewayDelegates(\n  params: {\n    address: WalletAddress;\n  } & PaginationParams<AoGatewayDelegateWithAddress>\n): Promise<PaginationResult<AoGatewayDelegateWithAddress>>;\n\n// Where AoGatewayDelegateWithAddress is:\ninterface AoGatewayDelegateWithAddress {\n  address: WalletAddress;\n  delegatedStake: number;\n  startTimestamp: Timestamp;\n}\n","children":["$","$L8",null,{"className":"language-typescript","children":"$23"}]}],"\n",["$","ol",null,{"start":"17","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getGatewayVaults"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get paginated list of vaults for a gateway"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Parameters: Gateway address and pagination options"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getGatewayVaults(\n  params: {\n    address: WalletAddress;\n  } & PaginationParams<AoGatewayVault>\n): Promise<PaginationResult<AoGatewayVault>>;\n\n// Where AoGatewayVault is:\ninterface AoGatewayVault {\n  cursorId: string;\n  vaultId: TransactionId;\n  balance: number;\n  endTimestamp: Timestamp;\n  startTimestamp: Timestamp;\n}\n","children":["$","$L8",null,{"className":"language-typescript","children":"$24"}]}],"\n",["$","h4",null,{"children":"Vault Operations"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getVault"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get information about a specific vault"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Parameters: Wallet address and vault ID"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getVault({\n  address: WalletAddress;\n  vaultId: string;\n}): Promise<AoVaultData | undefined>;\n\n// Where AoVaultData is:\ninterface AoVaultData {\n  balance: number;\n  startTimestamp: Timestamp;\n  endTimestamp: Timestamp;\n}\n","children":["$","$L8",null,{"className":"language-typescript","children":"$25"}]}],"\n",["$","ol",null,{"start":"2","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getVaults"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get paginated list of all vaults"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Parameters: Optional pagination parameters"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getVaults(\n  params?: PaginationParams<AoWalletVault>\n): Promise<PaginationResult<AoWalletVault>>;\n\n// Where AoWalletVault extends AoVaultData with:\ninterface AoWalletVault extends AoVaultData {\n  address: WalletAddress;\n  vaultId: string;\n}\n\n// Valid sortBy fields:\n// - address\n// - vaultId\n// - balance\n// - startTimestamp\n// - endTimestamp\n","children":["$","$L8",null,{"className":"language-typescript","children":"$26"}]}],"\n",["$","h4",null,{"children":"Epoch Operations"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getEpoch"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get information about a specific epoch"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Parameters: Optional epoch identifier"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"// Overloads:\nasync getEpoch(epoch: EpochInput): Promise<AoEpochData<AoEpochDistributed> | undefined>;\nasync getEpoch(): Promise<AoEpochData<AoEpochDistributionTotalsData>>;\n\n// Where EpochInput is:\ntype EpochInput = {\n  timestamp: number;\n} | {\n  epochIndex: number;\n} | undefined;\n\n// And AoEpochData is:\ninterface AoEpochData<D = AoEpochDistributionData> {\n  epochIndex: number;\n  startHeight: number;\n  observations: {\n    failureSummaries: Record<WalletAddress, WalletAddress[]>;\n    reports: Record<WalletAddress, TransactionId>;\n  };\n  prescribedObservers: AoWeightedObserver[];\n  prescribedNames: string[];\n  startTimestamp: number;\n  endTimestamp: number;\n  distributionTimestamp: number;\n  distributions: D;\n  arnsStats: {\n    totalReturnedNames: number;\n    totalActiveNames: number;\n    totalGracePeriodNames: number;\n    totalReservedNames: number;\n  };\n}\n","children":["$","$L8",null,{"className":"language-typescript","children":"$27"}]}],"\n",["$","ol",null,{"start":"2","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getCurrentEpoch"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get information about the current epoch"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getCurrentEpoch(): Promise<AoEpochData<AoEpochDistributionTotalsData>>;\n\n// Where AoEpochDistributionTotalsData is:\ninterface AoEpochDistributionTotalsData {\n  totalEligibleGateways: number;\n  totalEligibleRewards: number;\n  totalEligibleObserverReward: number;\n  totalEligibleGatewayReward: number;\n}\n","children":["$","$L8",null,{"className":"language-typescript","children":"$28"}]}],"\n",["$","ol",null,{"start":"3","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getDistributions"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get reward distributions for an epoch"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Parameters: Optional epoch identifier"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getDistributions(\n  epoch?: EpochInput\n): Promise<AoEpochDistributionData | undefined>;\n\n// Where AoEpochDistributionData is:\ntype AoEpochDistributionData = AoEpochDistributionTotalsData | AoEpochDistributed;\n\ninterface AoEpochDistributed extends AoEpochDistributionTotalsData {\n  distributedTimestamp: number;\n  totalDistributedRewards: number;\n}\n","children":["$","$L8",null,{"className":"language-typescript","children":"$29"}]}],"\n",["$","ol",null,{"start":"4","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getPrescribedObservers"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get list of weighted observers for an epoch"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Parameters: Optional epoch identifier"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getPrescribedObservers(\n  epoch?: EpochInput\n): Promise<AoWeightedObserver[] | undefined>;\n\n// Where AoWeightedObserver is:\ninterface AoWeightedObserver {\n  gatewayAddress: WalletAddress;\n  observerAddress: WalletAddress;\n  stake: number;\n  startTimestamp: number;\n  stakeWeight: number;\n  tenureWeight: number;\n  gatewayPerformanceRatio: number;\n  observerPerformanceRatio: number;\n  compositeWeight: number;\n  normalizedCompositeWeight: number;\n}\n","children":["$","$L8",null,{"className":"language-typescript","children":"$2a"}]}],"\n",["$","ol",null,{"start":"5","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getObservations"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get observation data for an epoch"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Parameters: Optional epoch identifier"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getObservations(\n  epoch?: EpochInput\n): Promise<AoEpochObservationData | undefined>;\n\n// Where AoEpochObservationData is:\ninterface AoEpochObservationData {\n  failureSummaries: Record<WalletAddress, WalletAddress[]>;  // Gateway -> Failed gateways\n  reports: Record<WalletAddress, TransactionId>;             // Observer -> Report tx\n}\n","children":["$","$L8",null,{"className":"language-typescript","children":"$2b"}]}],"\n",["$","ol",null,{"start":"6","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"saveObservations"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Submit gateway observations for the current epoch"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Report transaction ID and failed gateways list"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async saveObservations(\n  params: {\n    reportTxId: TransactionId;      // Transaction ID containing observation data\n    failedGateways: WalletAddress[]; // List of failed gateway addresses\n  },\n  options?: {\n    tags?: Array<{ name: string; value: string }>;\n  }\n): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$2c"}]}],"\n",["$","h4",null,{"children":"ArNS Operations"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"buyRecord"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Purchase an ArNS name"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Name details and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"interface AoBuyRecordParams {\n  name: string;                    // Name to purchase\n  years?: number;                  // Lease duration in years (default: 1)\n  type: 'lease' | 'permabuy';      // Purchase type\n  processId: string;               // ANT process ID\n  fundFrom?: 'balance' | 'stakes' | 'any';  // Source of funds\n}\n\nasync buyRecord(\n  params: AoBuyRecordParams,\n  options?: WriteOptions\n): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$2d"}]}],"\n",["$","ol",null,{"start":"2","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"extendLease"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Extend the lease of an existing leased record"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Name, years, and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"interface AoExtendLeaseParams {\n  name: string;                    // Name to extend\n  years: number;                   // Additional years\n  fundFrom?: 'balance' | 'stakes' | 'any';  // Source of funds\n}\n\nasync extendLease(\n  params: AoExtendLeaseParams,\n  options?: WriteOptions\n): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$2e"}]}],"\n",["$","ol",null,{"start":"3","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getArNSRecord"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get information about an ArNS name"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Parameters: Name to lookup"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getArNSRecord({\n  name: string;\n}): Promise<AoArNSNameData | undefined>;\n\n// Where AoArNSNameData is:\ntype AoArNSNameData = AoArNSPermabuyData | AoArNSLeaseData;\n\ninterface AoArNSBaseNameData {\n  processId: string;\n  startTimestamp: number;\n  type: 'lease' | 'permabuy';\n  undernameLimit: number;\n  purchasePrice: number;\n}\n\ninterface AoArNSPermabuyData extends AoArNSBaseNameData {\n  type: 'permabuy';\n}\n\ninterface AoArNSLeaseData extends AoArNSBaseNameData {\n  type: 'lease';\n  endTimestamp: number;\n}\n","children":["$","$L8",null,{"className":"language-typescript","children":"$2f"}]}],"\n",["$","ol",null,{"start":"4","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getArNSRecords"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get paginated list of ArNS records"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Parameters: Optional pagination parameters"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getArNSRecords(\n  params?: PaginationParams<AoArNSNameDataWithName>\n): Promise<PaginationResult<AoArNSNameDataWithName>>;\n\n// Where AoArNSNameDataWithName extends AoArNSNameData with:\ninterface AoArNSNameDataWithName extends AoArNSNameData {\n  name: string;\n}\n","children":["$","$L8",null,{"className":"language-typescript","children":"$30"}]}],"\n",["$","ol",null,{"start":"5","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getTokenCost"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Calculate token cost for various ArNS operations"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Parameters: Operation details"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"// Overloads for different operations:\n\n// Buy a name\nasync getTokenCost(params: {\n  intent: 'Buy-Record' | 'Buy-Name';\n  type: 'permabuy' | 'lease';\n  years: number;\n  name: string;\n}): Promise<number>;\n\n// Extend a lease\nasync getTokenCost(params: {\n  intent: 'Extend-Lease';\n  years: number;\n  name: string;\n}): Promise<number>;\n\n// Increase undername limit\nasync getTokenCost(params: {\n  intent: 'Increase-Undername-Limit';\n  quantity: number;\n  name: string;\n}): Promise<number>;\n\n// Upgrade to permabuy\nasync getTokenCost(params: {\n  intent: 'Upgrade-Name';\n  name: string;\n}): Promise<number>;\n\n// Request primary name\nasync getTokenCost(params: {\n  intent: 'Primary-Name-Request';\n  name: string;\n}): Promise<number>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$31"}]}],"\n",["$","ol",null,{"start":"6","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getDemandFactor"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get current demand factor for ArNS names"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Returns: Current demand factor as a number"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getDemandFactor(): Promise<number>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"<span><span style=\"color: var(--shiki-color-text)\">async </span><span style=\"color: var(--shiki-token-function)\">getDemandFactor</span><span style=\"color: var(--shiki-color-text)\">(): </span><span style=\"color: var(--shiki-token-constant)\">Promise</span><span style=\"color: var(--shiki-token-keyword)\">&lt;</span><span style=\"color: var(--shiki-color-text)\">number</span><span style=\"color: var(--shiki-token-keyword)\">&gt;</span><span style=\"color: var(--shiki-color-text)\">;</span></span>\n<span></span>"}]}],"\n",["$","ol",null,{"start":"7","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"increaseUndernameLimit"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Increase the undername limit for an ArNS name"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Name, quantity, and funding source"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"interface AoIncreaseUndernameLimitParams {\n  name: string;                    // Name to increase limit for\n  increaseCount: number;           // Number of additional undernames\n  fundFrom?: 'balance' | 'stakes' | 'any';  // Source of funds\n}\n\nasync increaseUndernameLimit(\n  params: AoIncreaseUndernameLimitParams,\n  options?: WriteOptions\n): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$32"}]}],"\n",["$","ol",null,{"start":"8","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getArNSReturnedName"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get information about a returned name"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Parameters: Name to lookup"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getArNSReturnedName({\n  name: string;\n}): Promise<AoReturnedName | undefined>;\n\n// Where AoReturnedName is:\ninterface AoReturnedName {\n  name: string;\n  startTimestamp: Timestamp;\n  endTimestamp: Timestamp;\n  initiator: string;\n  premiumMultiplier: number;\n}\n","children":["$","$L8",null,{"className":"language-typescript","children":"$33"}]}],"\n",["$","ol",null,{"start":"9","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getArNSReturnedNames"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get paginated list of returned ArNS names"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Parameters: Optional pagination parameters"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getArNSReturnedNames(\n  params?: PaginationParams<AoReturnedName>\n): Promise<PaginationResult<AoReturnedName>>;\n\n// Valid sortBy fields:\n// - name\n// - startTimestamp\n// - endTimestamp\n// - initiator\n// - premiumMultiplier\n","children":["$","$L8",null,{"className":"language-typescript","children":"$34"}]}],"\n",["$","h4",null,{"children":"Primary Name Operations"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getPrimaryName"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get primary name information by address or name"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Parameters: Address or name to lookup"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getPrimaryName(\n  params: { address: WalletAddress } | { name: string }\n): Promise<AoPrimaryName>;\n\n// Where AoPrimaryName is:\ninterface AoPrimaryName {\n  name: string;\n  address: WalletAddress;\n  startTimestamp: Timestamp;\n}\n","children":["$","$L8",null,{"className":"language-typescript","children":"$35"}]}],"\n",["$","ol",null,{"start":"2","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getPrimaryNames"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get paginated list of primary names"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Parameters: Optional pagination parameters"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getPrimaryNames(\n  params: PaginationParams<AoPrimaryName>\n): Promise<PaginationResult<AoPrimaryName>>;\n\n// Valid sortBy fields:\n// - name\n// - address\n// - startTimestamp\n","children":["$","$L8",null,{"className":"language-typescript","children":"$36"}]}],"\n",["$","ol",null,{"start":"3","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getPrimaryNameRequest"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get primary name request for an address"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Parameters: Initiator address"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getPrimaryNameRequest(\n  params: {\n    initiator: WalletAddress;\n  }\n): Promise<AoPrimaryNameRequest>;\n\n// Where AoPrimaryNameRequest is:\ninterface AoPrimaryNameRequest {\n  name: string;\n  initiator: WalletAddress;\n  startTimestamp: Timestamp;\n  status: 'pending' | 'approved' | 'rejected';\n}\n","children":["$","$L8",null,{"className":"language-typescript","children":"$37"}]}],"\n",["$","ol",null,{"start":"4","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getPrimaryNameRequests"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get paginated list of primary name requests"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Parameters: Optional pagination parameters"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getPrimaryNameRequests(\n  params?: PaginationParams<AoPrimaryNameRequest>\n): Promise<PaginationResult<AoPrimaryNameRequest>>;\n\n// Valid sortBy fields:\n// - name\n// - initiator\n// - startTimestamp\n// - status\n","children":["$","$L8",null,{"className":"language-typescript","children":"$38"}]}],"\n",["$","ol",null,{"start":"5","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"requestPrimaryName"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Submit a request for a primary name"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Name and funding source"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"interface AoArNSPurchaseParams {\n  name: string;                    // Name to request\n  fundFrom?: 'balance' | 'stakes' | 'any';  // Source of funds\n}\n\nasync requestPrimaryName(\n  params: AoArNSPurchaseParams,\n  options?: WriteOptions\n): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$39"}]}],"\n",["$","$L6",null,{"level":2,"id":"class-ant","children":"Class: ANT"}],"\n",["$","h3",null,{"children":"Configuration"}],"\n",["$","$L7",null,{"language":"typescript","code":"interface ANTConfig {\n  signer?: ArweaveSigner | ArConnectSigner;\n  processId: string; // Required ANT process ID\n}\n\n// Initialize ANT\nconst ant = ANT.init(config: ANTConfig);\n","children":["$","$L8",null,{"className":"language-typescript","children":"$3a"}]}],"\n",["$","h3",null,{"children":"Methods"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getInfo"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get basic information about the ANT"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getInfo(): Promise<{\n  name: string;\n  ticker: string;\n  description?: string;\n  keywords?: string[];\n  logo?: string;\n}>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$3b"}]}],"\n",["$","ol",null,{"start":"2","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getLogo"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get the ANT's logo transaction ID"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getLogo(): Promise<string | null>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"<span><span style=\"color: var(--shiki-color-text)\">async </span><span style=\"color: var(--shiki-token-function)\">getLogo</span><span style=\"color: var(--shiki-color-text)\">(): </span><span style=\"color: var(--shiki-token-constant)\">Promise</span><span style=\"color: var(--shiki-token-keyword)\">&lt;</span><span style=\"color: var(--shiki-color-text)\">string </span><span style=\"color: var(--shiki-token-keyword)\">|</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-constant)\">null</span><span style=\"color: var(--shiki-token-keyword)\">&gt;</span><span style=\"color: var(--shiki-color-text)\">;</span></span>\n<span></span>"}]}],"\n",["$","ol",null,{"start":"3","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getState"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get the complete state of the ANT"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getState(): Promise<{\n  name: string;\n  ticker: string;\n  description?: string;\n  keywords?: string[];\n  logo?: string;\n  owner: string;\n  controllers: string[];\n  records: Record<string, string>;\n}>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$3c"}]}],"\n",["$","ol",null,{"start":"4","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getOwner"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get the ANT owner's address"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getOwner(): Promise<string>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"<span><span style=\"color: var(--shiki-color-text)\">async </span><span style=\"color: var(--shiki-token-function)\">getOwner</span><span style=\"color: var(--shiki-color-text)\">(): </span><span style=\"color: var(--shiki-token-constant)\">Promise</span><span style=\"color: var(--shiki-token-keyword)\">&lt;</span><span style=\"color: var(--shiki-color-text)\">string</span><span style=\"color: var(--shiki-token-keyword)\">&gt;</span><span style=\"color: var(--shiki-color-text)\">;</span></span>\n<span></span>"}]}],"\n",["$","ol",null,{"start":"5","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getControllers"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get list of controller addresses"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getControllers(): Promise<string[]>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"<span><span style=\"color: var(--shiki-color-text)\">async </span><span style=\"color: var(--shiki-token-function)\">getControllers</span><span style=\"color: var(--shiki-color-text)\">(): </span><span style=\"color: var(--shiki-token-constant)\">Promise</span><span style=\"color: var(--shiki-token-keyword)\">&lt;</span><span style=\"color: var(--shiki-color-text)\">string[]</span><span style=\"color: var(--shiki-token-keyword)\">&gt;</span><span style=\"color: var(--shiki-color-text)\">;</span></span>\n<span></span>"}]}],"\n",["$","ol",null,{"start":"6","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getHandlers"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get list of supported handlers"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getHandlers(): Promise<string[]>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"<span><span style=\"color: var(--shiki-color-text)\">async </span><span style=\"color: var(--shiki-token-function)\">getHandlers</span><span style=\"color: var(--shiki-color-text)\">(): </span><span style=\"color: var(--shiki-token-constant)\">Promise</span><span style=\"color: var(--shiki-token-keyword)\">&lt;</span><span style=\"color: var(--shiki-color-text)\">string[]</span><span style=\"color: var(--shiki-token-keyword)\">&gt;</span><span style=\"color: var(--shiki-color-text)\">;</span></span>\n<span></span>"}]}],"\n",["$","ol",null,{"start":"7","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"getRecords"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get all DNS records"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getRecords(): Promise<Record<string, string>>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"<span><span style=\"color: var(--shiki-color-text)\">async </span><span style=\"color: var(--shiki-token-function)\">getRecords</span><span style=\"color: var(--shiki-color-text)\">(): </span><span style=\"color: var(--shiki-token-constant)\">Promise</span><span style=\"color: var(--shiki-token-keyword)\">&lt;</span><span style=\"color: var(--shiki-color-text)\">Record</span><span style=\"color: var(--shiki-token-keyword)\">&lt;</span><span style=\"color: var(--shiki-color-text)\">string</span><span style=\"color: var(--shiki-token-punctuation)\">,</span><span style=\"color: var(--shiki-color-text)\"> string</span><span style=\"color: var(--shiki-token-keyword)\">&gt;&gt;</span><span style=\"color: var(--shiki-color-text)\">;</span></span>\n<span></span>"}]}],"\n",["$","ol",null,{"start":"8","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"setRecord"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Set a DNS record (deprecated)"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Record details and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async setRecord({\n  undername: string;  // '@' for top level\n  transactionId: string;\n  ttlSeconds?: number;\n  tags?: Array<{ name: string; value: string }>;\n}): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$3d"}]}],"\n",["$","ol",null,{"start":"9","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"setName"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Set the ANT name"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Name and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async setName({\n  name: string;\n  tags?: Array<{ name: string; value: string }>;\n}): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$3e"}]}],"\n",["$","ol",null,{"start":"10","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"setLogo"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Set the ANT logo"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Logo transaction ID and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async setLogo({\n  logo: string;  // Arweave transaction ID\n  tags?: Array<{ name: string; value: string }>;\n}): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$3f"}]}],"\n",["$","ol",null,{"start":"11","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"setTicker"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Set the ANT ticker symbol"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Ticker and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async setTicker({\n  ticker: string;\n  tags?: Array<{ name: string; value: string }>;\n}): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$40"}]}],"\n",["$","ol",null,{"start":"12","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"setDescription"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Set the ANT description"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Description and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async setDescription({\n  description: string;\n  tags?: Array<{ name: string; value: string }>;\n}): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$41"}]}],"\n",["$","ol",null,{"start":"13","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"setKeywords"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Set the ANT keywords"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Keywords array and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async setKeywords({\n  keywords: string[];\n  tags?: Array<{ name: string; value: string }>;\n}): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$42"}]}],"\n",["$","ol",null,{"start":"14","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"setController"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Add a controller address"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Controller address and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async setController({\n  controller: string;  // Wallet address to add as controller\n  tags?: Array<{ name: string; value: string }>;\n}): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$43"}]}],"\n",["$","ol",null,{"start":"15","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"removeController"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Remove a controller address"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Controller address and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async removeController({\n  controller: string;  // Wallet address to remove as controller\n  tags?: Array<{ name: string; value: string }>;\n}): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$44"}]}],"\n",["$","ol",null,{"start":"16","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"removeRecord"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Remove a DNS record (deprecated)"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Undername and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async removeRecord({\n  undername: string;  // '@' for top level\n  tags?: Array<{ name: string; value: string }>;\n}): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$45"}]}],"\n",["$","ol",null,{"start":"17","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"removePrimaryName"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Remove primary name assignment"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async removePrimaryName(options?: {\n  tags?: Array<{ name: string; value: string }>;\n}): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$46"}]}],"\n",["$","ol",null,{"start":"18","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"approvePrimaryNameRequest"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Approve a primary name request"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Initiator address and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async approvePrimaryNameRequest({\n  initiator: string;  // Address that requested the primary name\n  tags?: Array<{ name: string; value: string }>;\n}): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$47"}]}],"\n",["$","ol",null,{"start":"19","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"releaseName"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Release the ANT name back to the registry"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async releaseName(options?: {\n  tags?: Array<{ name: string; value: string }>;\n}): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$48"}]}],"\n",["$","ol",null,{"start":"20","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"reassignName"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Reassign the ANT name to another owner"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Target address and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async reassignName({\n  target: string;  // New owner's wallet address\n  tags?: Array<{ name: string; value: string }>;\n}): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$49"}]}],"\n",["$","ol",null,{"start":"21","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"transfer"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Transfer ANT ownership"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Target address and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async transfer({\n  target: string;  // New owner's wallet address\n  tags?: Array<{ name: string; value: string }>;\n}): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$4a"}]}],"\n",["$","ol",null,{"start":"22","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"setBaseNameRecord"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Set the base name record"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Record details and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async setBaseNameRecord({\n  transactionId: string;  // Arweave transaction ID to resolve to\n  ttlSeconds?: number;    // DNS TTL in seconds (default: 900)\n  tags?: Array<{ name: string; value: string }>;\n}): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$4b"}]}],"\n",["$","ol",null,{"start":"23","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"setUndernameRecord"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Set an undername record"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Undername details and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async setUndernameRecord({\n  undername: string;      // Undername to set (e.g., 'blog')\n  transactionId: string;  // Arweave transaction ID to resolve to\n  ttlSeconds?: number;    // DNS TTL in seconds (default: 900)\n  tags?: Array<{ name: string; value: string }>;\n}): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$4c"}]}],"\n",["$","ol",null,{"start":"24","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"removeUndernameRecord"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Remove an undername record"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Undername and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async removeUndernameRecord({\n  undername: string;  // Undername to remove\n  tags?: Array<{ name: string; value: string }>;\n}): Promise<{ id: string }>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$4d"}]}],"\n",["$","$L6",null,{"level":2,"id":"class-ant-registry","children":"Class: ANTRegistry"}],"\n",["$","h3",null,{"children":"Configuration"}],"\n",["$","$L7",null,{"language":"typescript","code":"interface ANTRegistryConfig {\n  signer?: ArweaveSigner | ArConnectSigner;\n  processId: string; // Required registry process ID\n}\n\n// Initialize ANTRegistry\nconst registry = ANTRegistry.init(config: ANTRegistryConfig);\n","children":["$","$L8",null,{"className":"language-typescript","children":"$4e"}]}],"\n",["$","h3",null,{"children":"Methods"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"accessControlList"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Get the access control list for name registration"}],"\n",["$","li",null,{"children":"Authentication: Not required"}],"\n",["$","li",null,{"children":"Returns: List of allowed addresses and their registration limits"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async accessControlList(): Promise<Array<{\n  address: string;\n  limit: number;\n  used: number;\n}>>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$4f"}]}],"\n",["$","ol",null,{"start":"2","children":["\n",["$","li",null,{"children":["$","strong",null,{"children":"register"}]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Purpose: Register a new ANT"}],"\n",["$","li",null,{"children":"Authentication: Required"}],"\n",["$","li",null,{"children":"Parameters: Registration details and optional tags"}],"\n"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async register({\n  name: string;           // Name to register\n  ticker?: string;        // Optional ticker symbol\n  description?: string;   // Optional description\n  keywords?: string[];    // Optional keywords\n  logo?: string;         // Optional Arweave transaction ID for logo\n  tags?: Array<{ name: string; value: string }>;\n}): Promise<{\n  id: string;            // Transaction ID\n  processId: string;     // New ANT process ID\n}>;\n","children":["$","$L8",null,{"className":"language-typescript","children":"$50"}]}],"\n",["$","$L6",null,{"level":2,"id":"common-patterns-and-usage","children":"Common Patterns and Usage"}],"\n",["$","h3",null,{"children":"Authentication Flow"}],"\n",["$","$L7",null,{"language":"typescript","code":"// Web authentication\nconst ario = ARIO.init({\n  signer: new ArConnectSigner(window.arweaveWallet)\n});\n\n// Node.js authentication\nconst ario = ARIO.init({\n  signer: new ArweaveSigner(jwk)\n});\n","children":["$","$L8",null,{"className":"language-typescript","children":"$51"}]}],"\n",["$","h3",null,{"children":"Error Handling"}],"\n",["$","$L7",null,{"language":"typescript","code":"try {\n  const result = await ario.someMethod();\n} catch (error) {\n  if (error.name === 'AuthenticationError') {\n    // Handle authentication errors\n  } else if (error.name === 'ValidationError') {\n    // Handle validation errors\n  }\n  // ... other error types\n}\n","children":["$","$L8",null,{"className":"language-typescript","children":"$52"}]}],"\n",["$","h3",null,{"children":"Type Definitions"}],"\n",["$","$L7",null,{"language":"typescript","code":"// Core types used throughout the SDK\ninterface GQLTag {\n  name: string;\n  value: string;\n}\n\ninterface PaginationOptions {\n  limit?: number;\n  cursor?: string;\n  sortBy?: string;\n  sortOrder?: 'asc' | 'desc';\n}\n\n// ... other common types\n","children":["$","$L8",null,{"className":"language-typescript","children":"$53"}]}],"\n",["$","$L6",null,{"level":2,"id":"integration-examples","children":"Integration Examples"}],"\n",["$","h3",null,{"children":"Gateway Management"}],"\n",["$","$L7",null,{"language":"typescript","code":"// Example of complete gateway lifecycle\nasync function manageGateway() {\n  // Join network\n  const joinResult = await ario.joinNetwork({\n    qty: 10000,\n    label: \"My Gateway\",\n    // ... other required params\n  });\n\n  // Update settings\n  await ario.updateGatewaySettings({\n    // ... settings\n  });\n\n  // Leave network\n  await ario.leaveNetwork();\n}\n","children":["$","$L8",null,{"className":"language-typescript","children":"$54"}]}],"\n",["$","p",null,{"children":"[Continue with more integration examples...]"}],"\n",["$","$L6",null,{"level":2,"id":"best-practices","children":"Best Practices"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Authentication"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Always initialize with appropriate signer for environment"}],"\n",["$","li",null,{"children":"Handle authentication errors gracefully"}],"\n",["$","li",null,{"children":"Implement proper key management"}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Error Handling"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Implement comprehensive error handling"}],"\n",["$","li",null,{"children":"Use type checking for parameters"}],"\n",["$","li",null,{"children":"Validate inputs before making calls"}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Rate Limiting"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Implement appropriate delays between calls"}],"\n",["$","li",null,{"children":"Use pagination for large data sets"}],"\n",["$","li",null,{"children":"Cache responses where appropriate"}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":"[Continue with more best practices...]"}],"\n",["$","$L6",null,{"level":2,"id":"write-operations","children":"Write Operations"}],"\n",["$","$L7",null,{"language":"typescript","code":"/**\n * Important: All write operations (methods requiring authentication) accept an optional \n * WriteOptions parameter with the following structure:\n */\ninterface WriteOptions {\n  tags?: Array<{ name: string; value: string }>;\n}\n","children":["$","$L8",null,{"className":"language-typescript","children":"$55"}]}],"\n",["$","$L6",null,{"level":2,"id":"pagination-notes","children":"Pagination Notes"}],"\n",["$","p",null,{"children":"For all paginated methods:"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"language":"txt","children":[["$","$L8",null,{"children":"limit"}]," has a maximum value of 1000"]}],"\n",["$","li",null,{"language":"txt","children":[["$","$L8",null,{"children":"sortBy"}]," must be an attribute from the returned item type"]}],"\n",["$","li",null,{"language":"txt","children":[["$","$L8",null,{"children":"sortOrder"}]," can be 'asc' or 'desc'"]}],"\n"]}],"\n",["$","p",null,{"language":"txt","children":["Example for ",["$","$L8",null,{"children":"getBalances"}],":"]}],"\n",["$","$L7",null,{"language":"typescript","code":"async getBalances(params?: PaginationParams<AoBalanceWithAddress>): Promise<PaginationResult<AoBalanceWithAddress>>;\n\n// Where AoBalanceWithAddress is:\ninterface AoBalanceWithAddress {\n  address: WalletAddress;  // Can use \"address\" as sortBy\n  balance: number;         // Can use \"balance\" as sortBy\n}\n\n// Example usage:\nawait ario.getBalances({\n  limit: 100,\n  sortBy: \"balance\",      // Valid because it's a field in AoBalanceWithAddress\n  sortOrder: \"desc\"\n});\n","children":["$","$L8",null,{"className":"language-typescript","children":"$56"}]}],"\n",["$","$L6",null,{"level":2,"id":"core-types","children":"Core Types"}],"\n",["$","$L7",null,{"language":"typescript","code":"// Basic Types\ntype BlockHeight = number;\ntype Timestamp = number;\ntype WalletAddress = string;\ntype TransactionId = string;\ntype ProcessId = string;\n\n// Pagination Types\ninterface PaginationParams<T = Record<string, never>> {\n  cursor?: string;\n  limit?: number;  // Maximum: 1000\n  sortBy?: string;\n  sortOrder?: 'asc' | 'desc';\n}\n\ninterface PaginationResult<T> {\n  items: T[];\n  nextCursor?: string;\n  limit: number;\n  totalItems: number;\n  sortBy?: string;\n  sortOrder: 'asc' | 'desc';\n  hasMore: boolean;\n}\n\n// Write Operation Options\ninterface WriteOptions {\n  tags?: Array<{ name: string; value: string }>;\n}\n\n// ... rest of the types ...\n","children":["$","$L8",null,{"className":"language-typescript","children":"$57"}]}],"\n",["$","h3",null,{"children":"Gateway Types"}],"\n",["$","$L7",null,{"language":"typescript","code":"interface AoGateway {\n  settings: {\n    allowDelegatedStaking: boolean | 'allowlist';\n    delegateRewardShareRatio: number;\n    allowedDelegates: WalletAddress[];\n    minDelegatedStake: number;\n    autoStake: boolean;\n    label: string;\n    note: string;\n    properties: string;\n    fqdn: string;\n    port: number;\n    protocol: 'https';\n  };\n  stats: {\n    passedConsecutiveEpochs: number;\n    failedConsecutiveEpochs: number;\n    totalEpochCount: number;\n    passedEpochCount: number;\n    failedEpochCount: number;\n    observedEpochCount: number;\n    prescribedEpochCount: number;\n  };\n  totalDelegatedStake: number;\n  startTimestamp: number;\n  endTimestamp: number;\n  observerAddress: string;\n  operatorStake: number;\n  status: 'joined' | 'leaving';\n}\n","children":["$","$L8",null,{"className":"language-typescript","children":"$58"}]}],"\n",["$","h3",null,{"children":"ArNS Types"}],"\n",["$","$L7",null,{"language":"typescript","code":"interface ArNSRecord {\n  name: string;\n  processId: string;\n  startTimestamp: number;\n  type: 'lease' | 'permabuy';\n  undernameLimit: number;\n  purchasePrice: number;\n  endTimestamp?: number;  // Only for leased records\n}\n\ninterface ArNSAuction {\n  id: string;\n  name: string;\n  startTimestamp: number;\n  endTimestamp: number;\n  highestBid: number;\n  highestBidder: string;\n}\n","children":["$","$L8",null,{"className":"language-typescript","children":"$59"}]}],"\n",["$","h3",null,{"children":"Epoch Types"}],"\n",["$","$L7",null,{"language":"typescript","code":"interface EpochData {\n  epochIndex: number;\n  startHeight: number;\n  startTimestamp: number;\n  endTimestamp: number;\n  distributionTimestamp: number;\n  observations: {\n    failureSummaries: Record<string, string[]>;\n    reports: Record<string, string>;\n  };\n  distributions: {\n    totalEligibleGateways: number;\n    totalEligibleRewards: number;\n    totalEligibleObserverReward: number;\n    totalEligibleGatewayReward: number;\n  };\n}\n","children":["$","$L8",null,{"className":"language-typescript","children":"$5a"}]}],"\n",["$","h3",null,{"children":"Vault Types"}],"\n",["$","$L7",null,{"language":"typescript","code":"interface VaultData {\n  id: string;\n  owner: string;\n  balance: number;\n  start: number;\n  end: number;\n  gateway?: string;\n  type: 'withdrawal' | 'operator' | 'delegate';\n}\n","children":["$","$L8",null,{"className":"language-typescript","children":"$5b"}]}],"\n",["$","h3",null,{"children":"Registry Settings"}],"\n",["$","$L7",null,{"language":"typescript","code":"interface GatewayRegistrySettings {\n  delegates: {\n    minStake: number;\n    withdrawLengthMs: number;\n  };\n  observers: {\n    tenureWeightDurationMs: number;\n    maxTenureWeight: number;\n  };\n  operators: {\n    minStake: number;\n    withdrawLengthMs: number;\n    leaveLengthMs: number;\n    failedEpochCountMax: number;\n    failedGatewaySlashRate: number;\n  };\n  redelegations: {\n    minRedelegationPenaltyRate: number;\n    maxRedelegationPenaltyRate: number;\n    minRedelegationAmount: number;\n    redelegationFeeResetIntervalMs: number;\n  };\n}\n","children":["$","$L8",null,{"className":"language-typescript","children":"$5c"}]}],"\n",["$","h3",null,{"children":"Additional Types"}],"\n",["$","$L7",null,{"language":"typescript","code":"$5d","children":["$","$L8",null,{"className":"language-typescript","children":"$5e"}]}]]}],["$","footer",null,{"className":"mx-auto mt-16 w-full max-w-2xl lg:max-w-5xl"}]]}],null,["$","$L5f",null,{"children":"$L60"}]]}],{},null]},null]},null]},null],["$","$2","h",{"children":[null,["$","$2","PwBM4XVoSDog5aQZS8-Qs",{"children":[["$","$L61",null,{"children":"$L62"}],["$","$L63",null,{"children":"$L64"}],null]}]]}]]],"m":"$undefined","G":["$65","$undefined"],"s":false,"S":true}
64:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
62:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"AR.IO Network Docs - AR.IO SDK AI Reference"}],["$","meta","2",{"name":"description","content":"Comprehensive API reference for the AR.IO SDK, optimized for AI consumption"}],["$","meta","3",{"property":"og:title","content":"AR.IO Network Docs"}],["$","meta","4",{"property":"og:description","content":"Comprehensive API reference for the AR.IO SDK, optimized for AI consumption"}],["$","meta","5",{"property":"og:image","content":"https://res.cloudinary.com/dopbvlqgc/image/upload/v1706802732/ario_v2nv53.png"}],["$","meta","6",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","7",{"name":"twitter:site","content":"@ar_io_network"}],["$","meta","8",{"name":"twitter:title","content":"AR.IO Network Docs"}],["$","meta","9",{"name":"twitter:description","content":"Comprehensive API reference for the AR.IO SDK, optimized for AI consumption"}],["$","meta","10",{"name":"twitter:image","content":"https://res.cloudinary.com/dopbvlqgc/image/upload/v1706802732/ario_v2nv53.png"}],["$","link","11",{"rel":"icon","href":"https://arweave.net/IXl1JBlE_gsOaXGa6yE1eifPu7ekH-qSaGR9b5GU88Y"}]]
60:null
66:I[78534,["7866","static/chunks/2a351a00-0c6ce40bfa6ca10a.js","9268","static/chunks/aaea2bcf-5ed8e0add326de85.js","2178","static/chunks/2178-de59cf2b1efc07cd.js","3140","static/chunks/3140-08f9823aa16c628b.js","7448","static/chunks/7448-4c49021a3353163c.js","7426","static/chunks/7426-4c7ac6a5791613c7.js","1753","static/chunks/1753-375c76cbf8b20ecd.js","3569","static/chunks/3569-d8db7458634ee154.js","7177","static/chunks/app/layout-a3a9c33f9ee13824.js"],"Providers"]
67:I[319,["7866","static/chunks/2a351a00-0c6ce40bfa6ca10a.js","9268","static/chunks/aaea2bcf-5ed8e0add326de85.js","2178","static/chunks/2178-de59cf2b1efc07cd.js","3140","static/chunks/3140-08f9823aa16c628b.js","7448","static/chunks/7448-4c49021a3353163c.js","7426","static/chunks/7426-4c7ac6a5791613c7.js","1753","static/chunks/1753-375c76cbf8b20ecd.js","3569","static/chunks/3569-d8db7458634ee154.js","7177","static/chunks/app/layout-a3a9c33f9ee13824.js"],"Layout"]
68:I[67087,["2178","static/chunks/2178-de59cf2b1efc07cd.js","4345","static/chunks/app/not-found-586589e5bfbf678a.js"],"default"]
3:["$","html",null,{"lang":"en","className":"h-full","suppressHydrationWarning":true,"children":["$","body",null,{"className":"flex min-h-full bg-white antialiased dark:bg-zinc-900","children":["$","$L66",null,{"children":["$","div",null,{"className":"w-full","children":["$","$L67",null,{"allSections":{"/":[],"/community-resources":[],"/mainnet-launch":[{"title":"Overview","id":"overview"},{"title":"Gateway Operators","id":"gateway-operators"},{"title":"ArNS Name Holders","id":"ar-ns-name-holders"},{"title":"SDK Developers","id":"sdk-developers"},{"title":"Adding ARIO to Wander","id":"adding-ario-to-wander"}],"/ai/sdk":[{"title":"SDK Classes Overview","id":"sdk-classes-overview"},{"title":"Important Constants","id":"important-constants"},{"title":"Class: ARIO","id":"class-ario"},{"title":"Class: ANT","id":"class-ant"},{"title":"Class: ANTRegistry","id":"class-ant-registry"},{"title":"Common Patterns and Usage","id":"common-patterns-and-usage"},{"title":"Integration Examples","id":"integration-examples"},{"title":"Best Practices","id":"best-practices"},{"title":"Write Operations","id":"write-operations"},{"title":"Pagination Notes","id":"pagination-notes"},{"title":"Core Types","id":"core-types"}],"/build/ar-io-sdk":[{"title":"Overview","id":"overview"},{"title":"AR.IO Network","id":"ar-io-network"},{"title":"Gateways","id":"gateways"},{"title":"ARIO Token","id":"ario-token"},{"title":"ArNS","id":"ar-ns"}],"/build/gateways":[{"title":"Overview","id":"overview"},{"title":"Gateway functions","id":"gateway-functions"},{"title":"AR.IO Gateway Benefits","id":"ar-io-gateway-benefits"},{"title":"Gateway Modularity","id":"gateway-modularity"},{"title":"ARNS Indexing and Routing","id":"arns-indexing-and-routing"}],"/build/guides":[],"/learn/ario-contract":[{"title":"Overview","id":"overview"},{"title":"Protocol Balance","id":"protocol-balance"},{"title":"Cross-Chain Signature Support","id":"cross-chain-signature-support"}],"/learn/arns":[{"title":"Overview","id":"overview"},{"title":"Name Registration","id":"name-registration"},{"title":"Primary Names","id":"primary-names"},{"title":"Arweave Name Token (ANT)","id":"arweave-name-token-ant"},{"title":"Addressing Variable Market Conditions","id":"addressing-variable-market-conditions"},{"title":"Dynamic Pricing Model","id":"dynamic-pricing-model"},{"title":"Returned Name Premiums (RNP)","id":"returned-name-premiums-rnp"},{"title":"Gateway Operator ArNS Discount","id":"gateway-operator-ar-ns-discount"}],"/learn/foundation":[{"title":"What is the AR.IO Foundation?","id":"what-is-the-ar-io-foundation"},{"title":"Guiding Philosophy","id":"guiding-philosophy"}],"/learn/glossary":[{"title":"AO Computer (AO):","id":"ao-computer-ao"},{"title":"Arweave Name System (ArNS):","id":"arweave-name-system-ar-ns"},{"title":"Arweave Name Token (ANT), “Name Token”:","id":"arweave-name-token-ant-name-token"},{"title":"Arweave Network Standards (ANS):","id":"arweave-network-standards-ans"},{"title":"Base Layer Transaction:","id":"base-layer-transaction"},{"title":"Bundle, bundling:","id":"bundle-bundling"},{"title":"Bundled Data Item (BDI):","id":"bundled-data-item-bdi"},{"title":"Bundler:","id":"bundler"},{"title":"Chunk:","id":"chunk"},{"title":"Decentralized, decentralization, etc:","id":"decentralized-decentralization-etc"},{"title":"Epoch:","id":"epoch"},{"title":"Gateway:","id":"gateway"},{"title":"Gateway Address Registry (GAR):","id":"gateway-address-registry-gar"},{"title":"Indexing:","id":"indexing"},{"title":"Layer 2 Infrastructure:","id":"layer-2-infrastructure"},{"title":"Manifest (aka Path Manifest, Arweave Manifest):","id":"manifest-aka-path-manifest-arweave-manifest"},{"title":"Mempool:","id":"mempool"},{"title":"Message:","id":"message"},{"title":"Miner (aka Arweave Node):","id":"miner-aka-arweave-node"},{"title":"Native Address:","id":"native-address"},{"title":"Normalized Address:","id":"normalized-address"},{"title":"Observer:","id":"observer"},{"title":"Optimistic Indexing:","id":"optimistic-indexing"},{"title":"Owner:","id":"owner"},{"title":"Owner Address:","id":"owner-address"},{"title":"Period:","id":"period"},{"title":"Permanent Cloud Network:","id":"permanent-cloud-network"},{"title":"Permaweb:","id":"permaweb"},{"title":"Process:","id":"process"},{"title":"Process ID (PID):","id":"process-id-pid"},{"title":"Protocol Balance:","id":"protocol-balance"},{"title":"Protocol Rewards:","id":"protocol-rewards"},{"title":"Public Key:","id":"public-key"},{"title":"Seeding:","id":"seeding"},{"title":"Staking (of tokens):","id":"staking-of-tokens"},{"title":"Stake Redelegation:","id":"stake-redelegation"},{"title":"Stake Redemption:","id":"stake-redemption"},{"title":"Transaction ID (txID):","id":"transaction-id-tx-id"},{"title":"Trust-minimization:","id":"trust-minimization"},{"title":"Vault:","id":"vault"},{"title":"Wayfinder Protocol:","id":"wayfinder-protocol"}],"/learn/introduction":[{"title":"TL;DR","id":"tl-dr"},{"title":"What is AR.IO","id":"what-is-ar-io"},{"title":"Why AR.IO ?","id":"why-ar-io"}],"/learn/labs":[{"title":"What is AR.IO Labs?","id":"what-is-ar-io-labs"}],"/learn/network-composition":[{"title":"Overview","id":"overview"},{"title":"Composition of the Permanent Cloud","id":"composition-of-the-permanent-cloud"}],"/learn/staking":[{"title":"Overview","id":"overview"},{"title":"Gateway Staking","id":"gateway-staking"},{"title":"Delegated Staking","id":"delegated-staking"},{"title":"Stake Redelegation","id":"stake-redelegation"},{"title":"Redeeming Delegated Stake for ArNS","id":"redeeming-delegated-stake-for-ar-ns"},{"title":"Expedited Withdrawal Fees","id":"expedited-withdrawal-fees"}],"/learn/token":[{"title":"Overview","id":"overview"},{"title":"Adding ARIO Token to Wander","id":"adding-ario-token-to-wander"}],"/build/ar-io-sdk/ANTs":[],"/build/ar-io-sdk/APIs":[],"/build/ar-io-sdk/ant-registry":[{"title":"Overview","id":"overview"}],"/build/ar-io-sdk/ario":[],"/build/ar-io-sdk/configurations":[],"/build/ar-io-sdk/examples":[],"/build/ar-io-sdk/getting-started":[{"title":"Prerequisites","id":"prerequisites"},{"title":"Installation","id":"installation"},{"title":"Quick Start","id":"quick-start"}],"/build/ar-io-sdk/logging":[],"/build/ar-io-sdk/pagination":[],"/build/ar-io-sdk/release-notes":[{"title":"Overview","id":"overview"},{"title":"3.7.1-alpha.1 (2025-02-18)","id":"3-7-1-alpha-1-2025-02-18"}],"/build/ar-io-sdk/resources":[],"/build/ar-io-sdk/tokens":[],"/build/ar-io-sdk/upgrade-guides":[],"/build/gateways/admin":[{"title":"Overview","id":"overview"},{"title":"Debug","id":"debug"},{"title":"Queue Transaction","id":"queue-transaction"},{"title":"Block Data","id":"block-data"}],"/build/gateways/advanced":[{"title":"Overview","id":"overview"},{"title":"Data Storage Location","id":"data-storage-location"},{"title":"Admin API Key","id":"admin-api-key"},{"title":"Wallet Association","id":"wallet-association"},{"title":"Unbundling","id":"unbundling"},{"title":"Content Moderation","id":"content-moderation"},{"title":"Contiguous Data Cleanup","id":"contiguous-data-cleanup"},{"title":"ArNS Resolver","id":"ar-ns-resolver"}],"/build/gateways/arns-resolution":[{"title":"Overview","id":"overview"},{"title":"Initial Caching","id":"initial-caching"},{"title":"Cache Refreshing","id":"cache-refreshing"},{"title":"Gateway TTL Override","id":"gateway-ttl-override"}],"/build/gateways/bundler":[{"title":"Overview","id":"overview"},{"title":"Getting Started","id":"getting-started"},{"title":"Starting and Stopping the Bundler","id":"starting-and-stopping-the-bundler"}],"/build/gateways/delegated-staking":[{"title":"Overview","id":"overview"}],"/build/gateways/env":[{"title":"Overview","id":"overview"},{"title":"Variables","id":"variables"}],"/build/gateways/gateway-network":[{"title":"Overview","id":"overview"},{"title":"Gateway Address Registry (GAR)","id":"gateway-address-registry-gar"},{"title":"Data Sharing","id":"data-sharing"},{"title":"Data Verification","id":"data-verification"}],"/build/gateways/grafana":[{"title":"Overview","id":"overview"},{"title":"Deploying Grafana","id":"deploying-grafana"},{"title":"Checking the logs","id":"checking-the-logs"},{"title":"Troubleshooting permission errors","id":"troubleshooting-permission-errors"},{"title":"Configure Nginx","id":"configure-nginx"},{"title":"Accessing Grafana","id":"accessing-grafana"},{"title":"Dashboards","id":"dashboards"}],"/build/gateways/join-network":[{"title":"Prerequisites","id":"prerequisites"},{"title":"Joining Via Network Portal","id":"joining-via-network-portal"},{"title":"Joining Programmatically","id":"joining-programmatically"}],"/build/gateways/linux-setup":[{"title":"Overview","id":"overview"},{"title":"System Requirements","id":"system-requirements"},{"title":"Install Packages","id":"install-packages"},{"title":"Install the Node","id":"install-the-node"},{"title":"Set up Networking","id":"set-up-networking"}],"/build/gateways/moderation":[{"title":"Overview","id":"overview"},{"title":"Authentication","id":"authentication"},{"title":"Block Data","id":"block-data"},{"title":"Block ArNS Name","id":"block-ar-ns-name"}],"/build/gateways/networking":[],"/build/gateways/observer":[{"title":"Overview","id":"overview"},{"title":"Observation Protocol","id":"observation-protocol"},{"title":"Onchain Reports","id":"onchain-reports"},{"title":"Selection of Observers","id":"selection-of-observers"},{"title":"Performance Evaluation","id":"performance-evaluation"},{"title":"Reward Distribution","id":"reward-distribution"},{"title":"Handling Deficient Gateways","id":"handling-deficient-gateways"}],"/build/gateways/release-notes":[{"title":"Overview","id":"overview"},{"title":"[Release 27] - 2025-02-20","id":"release-27-2025-02-20"},{"title":"[Release 26] - 2025-02-13","id":"release-26-2025-02-13"},{"title":"[Release 25] - 2025-02-07","id":"release-25-2025-02-07"},{"title":"[Release 24] - 2025-02-03","id":"release-24-2025-02-03"},{"title":"[Release 23] - 2025-01-13","id":"release-23-2025-01-13"},{"title":"[Release 22] - 2024-12-18","id":"release-22-2024-12-18"},{"title":"[Release 21] - 2024-12-05","id":"release-21-2024-12-05"},{"title":"[Release 20] - 2024-11-15","id":"release-20-2024-11-15"},{"title":"[Release 19] - 2024-10-21","id":"release-19-2024-10-21"},{"title":"[Release 18] - 2024-10-01","id":"release-18-2024-10-01"},{"title":"[Release 17] - 2024-09-09","id":"release-17-2024-09-09"},{"title":"[Release 16] - 2024-08-09","id":"release-16-2024-08-09"},{"title":"[Release 15] - 2024-07-19","id":"release-15-2024-07-19"},{"title":"[Release 14] - 2024-06-26","id":"release-14-2024-06-26"},{"title":"[Release 13] - 2024-06-24","id":"release-13-2024-06-24"},{"title":"[Release 12] - 2024-06-05","id":"release-12-2024-06-05"},{"title":"[Release 11] - 2024-05-21","id":"release-11-2024-05-21"},{"title":"[Release 10] - 2024-05-20","id":"release-10-2024-05-20"},{"title":"[Release 9] - 2024-04-10","id":"release-9-2024-04-10"},{"title":"[Release 8] - 2024-03-14","id":"release-8-2024-03-14"},{"title":"[Release 7] - 2024 - 02 - 14","id":"release-7-2024-02-14"},{"title":"[Release 6] - 2024-01-29","id":"release-6-2024-01-29"},{"title":"[Release 5] - 2024-01-25","id":"release-5-2024-01-25"},{"title":"[Release 4] - 2024-01-11","id":"release-4-2024-01-11"},{"title":"[Release 3] - 2023-12-05","id":"release-3-2023-12-05"}],"/build/gateways/setup-and-operation":[],"/build/gateways/troubleshooting":[{"title":"My Gateway Seems to be Running but...","id":"my-gateway-seems-to-be-running-but"},{"title":"My Gateway was Running, but now it isn't","id":"my-gateway-was-running-but-now-it-isnt"},{"title":"I am having Trouble Getting my Gateway Set up","id":"i-am-having-trouble-getting-my-gateway-set-up"},{"title":"Quick Lookup","id":"quick-lookup"}],"/build/gateways/upgrading":[{"title":"Prerequisites","id":"prerequisites"},{"title":"Checking your Release Number","id":"checking-your-release-number"},{"title":"Upgrade Steps","id":"upgrade-steps"}],"/build/gateways/windows-setup":[{"title":"Overview","id":"overview"},{"title":"Prerequisites","id":"prerequisites"},{"title":"Install Required Packages","id":"install-required-packages"},{"title":"Clone the Repository","id":"clone-the-repository"},{"title":"Create the Environment File","id":"create-the-environment-file"},{"title":"Supply Your Observer Wallet Keyfile:","id":"supply-your-observer-wallet-keyfile"},{"title":"Start the Docker Containers","id":"start-the-docker-containers"},{"title":"Set Up Router Port Forwarding","id":"set-up-router-port-forwarding"},{"title":"Install and Configure NGINX Docker","id":"install-and-configure-nginx-docker"}],"/build/guides/ardrive-web":[{"title":"Overview","id":"overview"},{"title":"Deploying","id":"deploying"},{"title":"Updating your dApp","id":"updating-your-d-app"}],"/build/guides/arlink":[{"title":"Overview","id":"overview"},{"title":"How it works","id":"how-it-works"},{"title":"Dashboard","id":"dashboard"},{"title":"New Deployment","id":"new-deployment"},{"title":"Updates","id":"updates"}],"/build/guides/arns-viewer":[{"title":"Overview","id":"overview"},{"title":"Getting Started","id":"getting-started"},{"title":"Install AR.IO SDK","id":"install-ar-io-sdk"},{"title":"Strip Default Content","id":"strip-default-content"},{"title":"Add Utilities","id":"add-utilities"},{"title":"Build Home Page","id":"build-home-page"},{"title":"Grid Component","id":"grid-component"},{"title":"Home Page","id":"home-page"},{"title":"Names Page","id":"names-page"},{"title":"Finish the Grid Component","id":"finish-the-grid-component"},{"title":"View Project","id":"view-project"},{"title":"CSS","id":"css"},{"title":"Deploy With Turbo","id":"deploy-with-turbo"},{"title":"References","id":"references"}],"/build/guides/gql":[{"title":"Overview","id":"overview"},{"title":"Constructing a Query","id":"constructing-a-query"},{"title":"Making a Query","id":"making-a-query"}],"/build/guides/managing-undernames":[{"title":"Overview","id":"overview"},{"title":"Creating an Undername","id":"creating-an-undername"},{"title":"Updating an Undername","id":"updating-an-undername"},{"title":"Removing an Undername","id":"removing-an-undername"},{"title":"Increasing Undername Support","id":"increasing-undername-support"}],"/build/guides/permaweb-deploy":[{"title":"Overview","id":"overview"},{"title":"Getting Started","id":"getting-started"},{"title":"Deploying App","id":"deploying-app"}],"/build/guides/primary-names":[{"title":"Overview","id":"overview"},{"title":"Setting a Primary Name with arns.app","id":"setting-a-primary-name-with-arns-app"},{"title":"Setting a Primary Name With the AR.IO SDK","id":"setting-a-primary-name-with-the-ar-io-sdk"},{"title":"Querying Primary Names","id":"querying-primary-names"},{"title":"Best Practices","id":"best-practices"}],"/learn/concepts/manifests":[{"title":"Overview","id":"overview"},{"title":"What is a Manifest","id":"what-is-a-manifest"},{"title":"Specifications","id":"specifications"}],"/learn/concepts/normalized-addresses":[{"title":"Overview","id":"overview"},{"title":"At A Glance","id":"at-a-glance"},{"title":"Public Keys and Addresses","id":"public-keys-and-addresses"},{"title":"Normalizing Addresses","id":"normalizing-addresses"}],"/learn/concepts/sandboxing":[{"title":"Overview","id":"overview"},{"title":"TLS and its Role in Browser Sandboxing","id":"tls-and-its-role-in-browser-sandboxing"},{"title":"Deriving Sandbox Value","id":"deriving-sandbox-value"}],"/learn/concepts/wayfinder":[{"title":"Overview","id":"overview"},{"title":"Browser Integration","id":"browser-integration"},{"title":"Internal Application Integration","id":"internal-application-integration"},{"title":"Benefits of Wayfinder Over Hardcoded Gateway Links","id":"benefits-of-wayfinder-over-hardcoded-gateway-links"},{"title":"Use Cases","id":"use-cases"},{"title":"How it Works","id":"how-it-works"},{"title":"Wayfinder App","id":"wayfinder-app"}],"/learn/guides/ants":[{"title":"Overview","id":"overview"}],"/learn/guides/ants-on-bazar":[{"title":"Overview","id":"overview"},{"title":"Bazar Profile","id":"bazar-profile"},{"title":"Transfer ANT to the Profile","id":"transfer-ant-to-the-profile"},{"title":"Restore Controllers","id":"restore-controllers"}],"/build/ar-io-sdk/ant-registry/access-control-list":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"output","id":"output"}],"/build/ar-io-sdk/ant-registry/register":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/approve-primary-name-request":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/configuration":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/get-controllers":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ants/get-handlers":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ants/get-info":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ants/get-logo":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ants/get-owner":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ants/get-records":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ants/get-state":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ants/reassign-name":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/release-name":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/remove-controller":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/remove-primary-names":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/remove-record":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/remove-undername-record":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/set-base-name-record":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/set-controller":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/set-description":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/set-keywords":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/set-logo":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/set-name":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/set-record":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/set-ticker":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/set-undername-record":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ants/transfer":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ario/configuration":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/gateways/observer/troubleshooting":[{"title":"Overview","id":"overview"},{"title":"Observer not running and/or unable to connect","id":"observer-not-running-and-or-unable-to-connect"},{"title":"Observer wallet has no AR","id":"observer-wallet-has-no-ar"},{"title":"Observer wallet ... does not match the 'observerWallet' set on the gateway ...","id":"observer-wallet-does-not-match-the-observer-wallet-set-on-the-gateway"},{"title":"Uncertain - confirm your OBSERVER_WALLET is set in the .env file and corresponding wallet is located in wallets/< address >.json...","id":"uncertain-confirm-your-observer-wallet-is-set-in-the-env-file-and-corresponding-wallet-is-located-in-wallets-address-json"}],"/learn/guides/ants/managing":[{"title":"Overview","id":"overview"},{"title":"Names","id":"names"},{"title":"ANTs","id":"ants"}],"/learn/guides/ants/registering":[{"title":"Overview","id":"overview"},{"title":"Connect Your Wallet","id":"connect-your-wallet"},{"title":"Checking Availability","id":"checking-availability"},{"title":"Configure Your Purchase","id":"configure-your-purchase"},{"title":"Confirm Your Purchase","id":"confirm-your-purchase"}],"/build/ar-io-sdk/ario/arns/buy-record":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ario/arns/extend-lease":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ario/arns/get-arns-record":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/arns/get-arns-records":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/arns/get-arns-returned-name":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/arns/get-arns-returned-names":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/arns/get-cost-details":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/arns/get-demand-factor":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/arns/get-token-cost":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/arns/increase-undername-limit":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ario/epochs/get-current-epoch":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/epochs/get-distributions":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/epochs/get-epoch":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/epochs/get-observations":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/epochs/get-precribed-observers":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/epochs/save-observations":[],"/build/ar-io-sdk/ario/gateways/cancel-withdrawal":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ario/gateways/decrease-delegate-stake":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"}],"/build/ar-io-sdk/ario/gateways/decrease-operator-stake":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ario/gateways/get-allowed-delegates":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/gateways/get-delegations":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/gateways/get-gateway":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/gateways/get-gateway-delegates":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/gateways/get-gateway-vaults":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/gateways/get-gateways":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/gateways/get-redelegation-fee":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/gateways/increase-delegate-stake":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"}],"/build/ar-io-sdk/ario/gateways/increase-operator-stake":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ario/gateways/instant-withdrawal":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ario/gateways/join-network":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"}],"/build/ar-io-sdk/ario/gateways/leave-network":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"}],"/build/ar-io-sdk/ario/gateways/redelegate-stake":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ario/gateways/update-gateway-settings":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"}],"/build/ar-io-sdk/ario/general/get-balance":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/general/get-balances":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/general/get-info":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/general/get-token-supply":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"},{"title":"Types","id":"types"}],"/build/ar-io-sdk/ario/general/transfer":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/primary-names/get-primary-name":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/primary-names/get-primary-name-request":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/primary-names/get-primary-names":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/primary-names/request-primary-name":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"}],"/build/ar-io-sdk/ario/vaults/get-vault":[{"title":"Parameters","id":"parameters"},{"title":"Examples","id":"examples"},{"title":"Output","id":"output"}],"/build/ar-io-sdk/ario/vaults/get-vaults":[{"title":"Parameters","id":"parameters"},{"title":"Example","id":"example"},{"title":"Output","id":"output"}],"/build/gateways/networking/certbot/cloudflare":[],"/build/gateways/networking/certbot/namecheap":[]},"children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","$L68",null,{}],"notFoundStyles":[]}]}]}]}]}]}]
